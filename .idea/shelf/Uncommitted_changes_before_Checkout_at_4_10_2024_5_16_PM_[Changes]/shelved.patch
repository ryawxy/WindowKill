Index: src/Model/Squarantine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model;\r\n\r\nimport Controller.Constants;\r\nimport Controller.Intersection;\r\nimport View.GamePanel;\r\nimport View.ShopFrame;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\n\r\npublic class Squarantine extends GameObjects implements movable {\r\n\r\n    private int xVelocity;\r\n    private int yVelocity;\r\n    private int [] xPoints = {0,0,0,0};\r\n    private int [] yPoints = {0,0,0,0};\r\n    private int HP = 10;\r\n    private int collectible;\r\n    private int HPPerAttack;\r\n    // number of HP it costs from epsilon per each attack\r\n    private final Epsilon epsilon;\r\n    private int epsilonXPos;\r\n    private int epsilonYPos;\r\n    private int squarantineXPos;\r\n    private int squarantineYPos;\r\n    private int angle;\r\n    private int speed;\r\n    private Random random;\r\n    private boolean dead;\r\n    private boolean showCollectibles;\r\n    private int timer;\r\n    // show collectibles only for 10 seconds\r\n    private double xVelocity2;\r\n    private double yVelocity2;\r\n    private double xVelocity3;\r\n    private double yVelocity3;\r\n\r\n    private final ArrayList<Collectible> collectibles = new ArrayList<>();\r\n\r\n    public Squarantine(int x, int y) {\r\n        super(x, y);\r\n        epsilon = GamePanel.getEpsilon();\r\n        initializeCollectibles();\r\n    }\r\n\r\n    public int getxVelocity() {\r\n        return xVelocity;\r\n    }\r\n\r\n    public void setxVelocity(int xVelocity) {\r\n        this.xVelocity = xVelocity;\r\n    }\r\n\r\n    public int getyVelocity() {\r\n        return yVelocity;\r\n    }\r\n\r\n    public void setyVelocity(int yVelocity) {\r\n        this.yVelocity = yVelocity;\r\n    }\r\n\r\n    public int[] getxPoints() {\r\n        return xPoints;\r\n    }\r\n\r\n    public void setxPoints(int[] xPoints) {\r\n        this.xPoints = xPoints;\r\n    }\r\n\r\n    public int[] getyPoints() {\r\n        return yPoints;\r\n    }\r\n\r\n    public void setyPoints(int[] yPoints) {\r\n        this.yPoints = yPoints;\r\n    }\r\n\r\n    public int getHP() {\r\n        return HP;\r\n    }\r\n\r\n    public void setHP(int HP) {\r\n        this.HP = HP;\r\n    }\r\n\r\n    public int getCollectible() {\r\n        return collectible;\r\n    }\r\n\r\n    public void setCollectible(int collectible) {\r\n        this.collectible = collectible;\r\n    }\r\n\r\n    public int getHPPerAttack() {\r\n        return HPPerAttack;\r\n    }\r\n\r\n    public void setHPPerAttack(int HPPerAttack) {\r\n        this.HPPerAttack = HPPerAttack;\r\n    }\r\n\r\n    public int getEpsilonXPos() {\r\n        return epsilonXPos;\r\n    }\r\n\r\n    public void setEpsilonXPos(int epsilonXPos) {\r\n        this.epsilonXPos = epsilonXPos;\r\n    }\r\n\r\n    public int getEpsilonYPos() {\r\n        return epsilonYPos;\r\n    }\r\n\r\n    public void setEpsilonYPos(int epsilonYPos) {\r\n        this.epsilonYPos = epsilonYPos;\r\n    }\r\n\r\n    public int getSquarantineXPos() {\r\n        return squarantineXPos;\r\n    }\r\n\r\n    public void setSquarantineXPos(int squarantineXPos) {\r\n        squarantineXPos = squarantineXPos;\r\n    }\r\n\r\n    public int getSquarantineYPos() {\r\n        return squarantineYPos;\r\n    }\r\n\r\n    public void setSquarantineYPos(int squarantineYPos) {\r\n        squarantineYPos = squarantineYPos;\r\n    }\r\n\r\n    public int getAngle() {\r\n        return angle;\r\n    }\r\n\r\n    public void setAngle(int angle) {\r\n        this.angle = angle;\r\n    }\r\n\r\n    public boolean isDead() {\r\n        return dead;\r\n    }\r\n\r\n    public void setDead(boolean dead) {\r\n        this.dead = dead;\r\n    }\r\n\r\n    public void moveTowardsEpsilon() {\r\n\r\n        epsilonXPos = epsilon.getX();\r\n        epsilonYPos = epsilon.getY();\r\n\r\n        squarantineXPos = (xPoints[0]+xPoints[1]+xPoints[2]+xPoints[3])/4;\r\n        squarantineYPos = (yPoints[0]+yPoints[1]+yPoints[2]+yPoints[3])/4;\r\n\r\n\r\n        angle = (int) Math.atan2(epsilonYPos-squarantineYPos,epsilonXPos-squarantineXPos);\r\n\r\n        if(Intersection.getIntersectionPoint()!=null){\r\n\r\n            double xPoint = Intersection.getIntersectionPoint().getX();\r\n            double yPoint = Intersection.getIntersectionPoint().getY();\r\n            double angle2 =  Math.atan2(squarantineYPos - yPoint, squarantineXPos - xPoint);\r\n            xVelocity2 = Math.cos(angle2) * Constants.impactSpeed();\r\n            yVelocity2 = Math.sin(angle2) * Constants.impactSpeed();\r\n        }else{\r\n            xVelocity2 = 0;\r\n            yVelocity2 = 0;\r\n        }\r\n\r\n\r\n        if(Intersection.getIntersectionPoint2()!=null){\r\n\r\n\r\n            double xPoint = Intersection.getIntersectionPoint2().getX();\r\n            double yPoint = Intersection.getIntersectionPoint2().getY();\r\n            double angle3 =  Math.atan2(squarantineYPos - yPoint, squarantineXPos - xPoint);\r\n            xVelocity3 = Math.cos(angle3) * Constants.impactSpeed();\r\n            yVelocity3 = Math.sin(angle3) * Constants.impactSpeed();\r\n        }else{\r\n            xVelocity3 = 0;\r\n            yVelocity3 = 0;\r\n        }\r\n        this.setxVelocity((int) ((int) (speed * Math.cos(angle))+xVelocity2+xVelocity3));\r\n        this.setyVelocity((int) ((int) (speed * Math.sin(angle))+yVelocity2+yVelocity3));\r\n\r\n\r\n        //if banish item is activated move in the opposite direction\r\n        if(ShopFrame.isBanishItem()){\r\n            this.setxVelocity(getxVelocity()*-1);\r\n            this.setyVelocity(getyVelocity()*-1);\r\n        }\r\n\r\n        xPoints[0] += getxVelocity();\r\n        xPoints[1] += getxVelocity();\r\n        xPoints[2] += getxVelocity();\r\n        xPoints[3] += getxVelocity();\r\n\r\n        yPoints[0] += getyVelocity();\r\n        yPoints[1] += getyVelocity();\r\n        yPoints[2] += getyVelocity();\r\n        yPoints[3] += getyVelocity();\r\n\r\n        squarantineXPos += getxVelocity();\r\n        squarantineYPos += getyVelocity();\r\n\r\n\r\n        this.setX(getX() + getxVelocity());\r\n        this.setY(getY() + getyVelocity());\r\n    }\r\n    @Override\r\n    public void move(){\r\n        random = new Random();\r\n        if (random.nextInt(100) < 3) { // 3% chance for acceleration event\r\n            int accelerationFactor = random.nextInt(3) + 1; // Random acceleration between 1 and 3\r\n            while (speed < 5) {\r\n                speed += accelerationFactor;\r\n                moveTowardsEpsilon();\r\n            }\r\n        } else {\r\n            if (speed > Constants.squarantineNormalSpeed()) {\r\n                speed -= Constants.squarantineAcceleration(); // Decelerate if above normal speed\r\n            }\r\n            moveTowardsEpsilon();\r\n        }\r\n    }\r\n    public void decreaseHP(){\r\n        setHP(getHP()-5);\r\n        if(getHP()<=0){\r\n            setDead(true);\r\n            setShowCollectibles(true);\r\n\r\n\r\n\r\n\r\n                getCollectibles().get(0).setX(xPoints[1]);\r\n                getCollectibles().get(0).setY(yPoints[1]);\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    public boolean isShowCollectibles() {\r\n        return showCollectibles;\r\n    }\r\n\r\n    public void setShowCollectibles(boolean showCollectibles) {\r\n        this.showCollectibles = showCollectibles;\r\n    }\r\n\r\n    public int getTimer() {\r\n        return timer;\r\n    }\r\n\r\n    public void setTimer(int timer) {\r\n        this.timer = timer;\r\n    }\r\n    public void initializeCollectibles(){\r\n\r\n        Collectible collectible1 = new Collectible(xPoints[0],yPoints[0]);\r\n        collectible1.setRadius(10);\r\n\r\n        collectibles.add(collectible1);\r\n\r\n    }\r\n\r\n    public ArrayList<Collectible> getCollectibles() {\r\n        return collectibles;\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/Squarantine.java b/src/Model/Squarantine.java
--- a/src/Model/Squarantine.java	
+++ b/src/Model/Squarantine.java	
@@ -213,7 +213,7 @@
     @Override
     public void move(){
         random = new Random();
-        if (random.nextInt(100) < 3) { // 3% chance for acceleration event
+        if (random.nextInt(15) == 3) { // 3% chance for acceleration event
             int accelerationFactor = random.nextInt(3) + 1; // Random acceleration between 1 and 3
             while (speed < 5) {
                 speed += accelerationFactor;
Index: src/Controller/GameLoop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Controller;\r\n\r\nimport Model.*;\r\nimport View.GamePanel;\r\nimport View.ShopFrame;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.geom.Point2D;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class GameLoop {\r\n\r\n    private Game game;\r\n    private Timer timer;\r\n    private FrameSize frameSize;\r\n    private Intersection intersection;\r\n    private Direction intersectionSide;\r\n    private int countTime;\r\n    // amount of time that has passed since the game has started\r\n    private int index=ShotGun.getShots().size()-3;\r\n    //balls shooting one by on in empower mode\r\n    private int time;\r\n    //amount of time since shooting the next fire\r\n    private int empowerTime;\r\n    //amount of time that has passed since empower item is activated\r\n    private int impactTimer;\r\n    //amount of time the has passed since enemy collision\r\n    private int impactTimer2;\r\n    //amount of time the has passed since collision with epsilon\r\n    private int banishTime;\r\n    //amount of time the has passed since banish item is activated\r\n\r\n\r\n\r\n    public GameLoop(Game game) throws IOException {\r\n        this.game = game;\r\n        timer = new Timer(5, new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (!KeyListener.getPauseGame()) {\r\n                    try {\r\n                        intersection = new Intersection(game.getGameFrame());\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                    if (!ShopFrame.isEmpowerItem()) {\r\n                        for (ShotGun shotGun : ShotGun.getShots()) {\r\n                            shotGun.move();\r\n\r\n                        }\r\n                    } else {\r\n                        empowerTime++;\r\n\r\n                        if (MouseListener.isShootinEmpowerMode()) {\r\n\r\n                            time++;\r\n\r\n                            for (int i = 0; i <= index; i++) {\r\n                                ShotGun.getShots().get(i).move();\r\n                            }\r\n                            if (time >= 2) {\r\n                                if (index <= ShotGun.getShots().size() - 2) {\r\n                                    index++;\r\n                                    time = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                for(int i=0;i<GamePanel.getSquarantine().size();i++) {\r\n                    Squarantine squarantine = GamePanel.getSquarantine().get(i);\r\n                    squarantine.move();\r\n                }\r\n                for (int i = 0; i < GamePanel.getTrigoraths().size(); i++) {\r\n                    Trigorath trigorath = GamePanel.getTrigoraths().get(i);\r\n                    trigorath.move();\r\n                }\r\n                    GamePanel.getEpsilon().move();\r\n\r\n                    intersection.shotIntersectsSquarantine();\r\n                    intersection.shotIntersectsTrigorath();\r\n                    intersection.shotIntersectsSquarantine();\r\n                    intersection.epsilonIntersectsCollectible();\r\n              //      intersection.epsilonIntersectEnemy();\r\n                    intersection.enemyIntersection();\r\n\r\n\r\n                    try {\r\n                        frameSize = new FrameSize(game.getGameFrame());\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                    //shrinkage starts after 10 seconds\r\n//                    if (countTime >= 700) {\r\n//                        frameSize.shrink();\r\n//                    }\r\n\r\n\r\n                    if (empowerTime >= 500) {\r\n                        ShopFrame.setEmpowerItem(false);\r\n                        empowerTime=0;\r\n                    }\r\n\r\n                    //check if a shot intersects with frame edges\r\n                    // if so expansion starts from that side for a second\r\n                    for (ShotGun shotGun : ShotGun.getShots()) {\r\n                        intersectionSide = intersection.shotIntersectsFrame(shotGun);\r\n                        if (intersectionSide != null) {\r\n                            if (shotGun.getExpansion() < 20) {\r\n                                frameSize.expand(intersectionSide);\r\n                                shotGun.setExpansion(shotGun.getExpansion() + 1);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    //if trigorath is dead show its collectibles for 10 seconds\r\n                    for (Trigorath trigorath : GamePanel.getTrigoraths()) {\r\n                        if (trigorath.isShowCollectibles()) {\r\n                            trigorath.setTimer(trigorath.getTimer() + 1);\r\n                            if (trigorath.getTimer() > 300) {\r\n                                trigorath.setShowCollectibles(false);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    countTime++;\r\n\r\n                    if(Intersection.getIntersectionPoint()!=null){\r\n                        impactTimer++;\r\n                    }\r\n                    if(impactTimer>=20){\r\n                        impactTimer = 0;\r\n                        Intersection.setIntersectionPoint(null);\r\n                    }\r\n\r\n                    if(Intersection.getIntersectionPoint2()!=null){\r\n                        impactTimer2++;\r\n                    }\r\n                    if(impactTimer2>=20){\r\n                        impactTimer2 = 0;\r\n                        Intersection.setIntersectionPoint2(null);\r\n                    }\r\n\r\n                    if(ShopFrame.isBanishItem()){\r\n                        banishTime++;\r\n                    }\r\n                    if(banishTime>=80){\r\n                        banishTime = 0;\r\n                        ShopFrame.setBanishItem(false);\r\n                    }\r\n                    for(Trigorath trigorath:GamePanel.getTrigoraths() ){\r\n                        Epsilon epsilon = GamePanel.getEpsilon();\r\n                        Polygon trigorath2 = new Polygon(trigorath.getxPoints(), trigorath.getyPoints(),3);\r\n                        if(intersection.checkCollision(epsilon.getxCenter(),epsilon.getyCenter(),epsilon.getRadius(),trigorath2)){\r\n                            Intersection.setIntersectionPoint2(new Point2D.Double(epsilon.getxCenter(),epsilon.getyCenter()));\r\n                        }\r\n                    }\r\n//                    for(Squarantine squarantine:GamePanel.getSquarantine() ){\r\n//                        Epsilon epsilon = GamePanel.getEpsilon();\r\n//                        Polygon squarantine2 = new Polygon(squarantine.getxPoints(), squarantine.getyPoints(),4);\r\n//                        if(intersection.checkCollision(epsilon.getxCenter(),epsilon.getyCenter(),epsilon.getRadius(),squarantine2)){\r\n//                            Intersection.setIntersectionPoint2(new Point2D.Double(epsilon.getxCenter(),epsilon.getyCenter()));\r\n//                        }\r\n//                    }\r\n\r\n                    game.getGameFrame().repaint();\r\n                }\r\n            }\r\n        });\r\n        timer.start();\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/GameLoop.java b/src/Controller/GameLoop.java
--- a/src/Controller/GameLoop.java	
+++ b/src/Controller/GameLoop.java	
@@ -47,6 +47,15 @@
                     } catch (IOException ex) {
                         throw new RuntimeException(ex);
                     }
+                    for(int i=0;i<GamePanel.getSquarantine().size();i++) {
+                        Squarantine squarantine = game.getGameFrame().getSquarantine().get(i);
+                        squarantine.move();
+                    }
+                    for (int i = 0; i < GamePanel.getTrigoraths().size(); i++) {
+                        Trigorath trigorath = GamePanel.getTrigoraths().get(i);
+                        trigorath.move();
+                    }
+                    GamePanel.getEpsilon().move();
                     if (!ShopFrame.isEmpowerItem()) {
                         for (ShotGun shotGun : ShotGun.getShots()) {
                             shotGun.move();
@@ -71,15 +80,6 @@
                         }
                     }
 
-                for(int i=0;i<GamePanel.getSquarantine().size();i++) {
-                    Squarantine squarantine = GamePanel.getSquarantine().get(i);
-                    squarantine.move();
-                }
-                for (int i = 0; i < GamePanel.getTrigoraths().size(); i++) {
-                    Trigorath trigorath = GamePanel.getTrigoraths().get(i);
-                    trigorath.move();
-                }
-                    GamePanel.getEpsilon().move();
 
                     intersection.shotIntersectsSquarantine();
                     intersection.shotIntersectsTrigorath();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"resolved a problem in displaying buttons on starter menu\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/GameLoop.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/GameLoop.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/Intersection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/Intersection.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Epsilon.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Epsilon.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Squarantine.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Squarantine.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Trigorath.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Trigorath.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/GamePanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/GamePanel.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2eomOtKF3m1dtnE0xNY8YwEPx1Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WindowKill2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"\" />\r\n      <created>1712579277915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712579277915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added a structure to the game\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580191999</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580191999</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added shotgun for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580372590</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580372590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"changing game frame size applied\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580642206</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580642206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"epsilon remains in game frame while shrinking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580834325</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580834325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"resolved conflict in settings branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712729501227</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712729501227</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"resolved a problem in displaying buttons on starter menu\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712730558884</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712730558884</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"added a structure to the game\" />\r\n    <MESSAGE value=\"added shotgun for epsilon\" />\r\n    <MESSAGE value=\"changing game frame size applied\" />\r\n    <MESSAGE value=\"epsilon remains in game frame while shrinking\" />\r\n    <MESSAGE value=\"added key changing to settings\" />\r\n    <MESSAGE value=\"resolved conflict in settings branch\" />\r\n    <MESSAGE value=\"resolved a problem in displaying buttons on starter menu\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"resolved a problem in displaying buttons on starter menu\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,13 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="resolved a problem in displaying buttons on starter menu">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Controller/GameLoop.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/GameLoop.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/Intersection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/Intersection.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Epsilon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Epsilon.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Squarantine.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Squarantine.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Trigorath.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Trigorath.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/GamePanel.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -27,6 +21,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="Squarantine" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectColorInfo">{
