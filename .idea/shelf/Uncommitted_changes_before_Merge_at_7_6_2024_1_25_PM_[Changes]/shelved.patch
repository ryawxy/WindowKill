Index: src/Model/GameLoop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model;\r\n\r\nimport Controller.*;\r\nimport Model.Entity.*;\r\nimport Model.Entity.BlackOrb.BlackOrbArray;\r\nimport Model.enums.BarricadosType;\r\nimport Model.enums.Direction;\r\nimport Model.enums.EnemyType;\r\nimport View.*;\r\nimport View.SettingsFrame;\r\nimport View.entityViews.Barricados.BarricadosFrame;\r\nimport View.entityViews.Barricados.BarricadosPanel;\r\nimport View.entityViews.BlackOrb.BlackOrbFrame;\r\nimport View.entityViews.BlackOrb.InvisibleFrame;\r\nimport myproject.MyProject;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.geom.Point2D;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class GameLoop {\r\n\r\n    private Game game;\r\n    private  Timer timer;\r\n    private FrameSize frameSize;\r\n    private ObjectsIntersection objectsIntersection;\r\n    private Direction intersectionSide;\r\n    private int countTime;\r\n    // amount of time that has passed since the game has started\r\n    private int index= Game.getShots().size()-3;\r\n    //balls shooting one by on in empower mode\r\n    private int time=3;\r\n    //amount of time since shooting the next fire\r\n    private int empowerTime;\r\n    //amount of time that has passed since empower item is activated\r\n    private int banishTime;\r\n    //amount of time the has passed since banish item is activated\r\n    private Timer elapsedTimer;\r\n    private static int seconds;\r\n    private static int minutes;\r\n    private boolean wave1Created;\r\n    private boolean wave2Created;\r\n    private boolean wave3Created;\r\n\r\n    private static boolean gameDone;\r\n    private Wave wave = new Wave();\r\n    int deadS;\r\n    int deadT;\r\n    int timeBetweenWave;\r\n    private static boolean win;\r\n    private static int lastXP;\r\n    private static boolean lose;\r\n    private boolean hasPlayed;\r\n    //game over sound\r\n    private String [] option = {\"menu\"};\r\n    private SkillTreeController skillTreeController = new SkillTreeController();\r\n    private ShopController shopController = new ShopController();\r\n    private FrameIntersection frameIntersection = new FrameIntersection();\r\n\r\n\r\n    public GameLoop(Game game) throws IOException {\r\n        this.game = game;\r\n    //    start();\r\n   //     elapsedTime();\r\n\r\n    }\r\n    public void elapsedTime(){\r\n        elapsedTimer = new Timer(1000, new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                seconds++;\r\n                if(seconds>=59){\r\n                    seconds = 0;\r\n                    minutes++;\r\n                }\r\n            }\r\n        });\r\n        elapsedTimer.start();\r\n    }\r\n    public void start(){\r\n        timer = new Timer(1, new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                if (!KeyListener.getPauseGame()) {\r\n\r\n\r\n                    //waves\r\n                    wave.initWave1();\r\n                    if (!wave1Created) {\r\n                        Game.getSoundPlayer().playSoundEffect(\"src/Sound/wave.wav\");\r\n\r\n                        if(SettingsFrame.getChosenLevel()==0) {\r\n                            for (Squarantine squarantine : wave.wave1EasySquarantine) {\r\n                                Game.getSquarantine().add(squarantine);\r\n                                Game.getEnemies().add(squarantine);\r\n\r\n                            }\r\n                            for (Trigorath trigorath : wave.wave1EasyTrigorath) {\r\n                                Game.getTrigoraths().add(trigorath);\r\n                                Game.getEnemies().add(trigorath);\r\n                            }\r\n                            for(Necropick necropick : wave.wave1EasyNecropicks){\r\n                                Game.getNecropicks().add(necropick);\r\n                                Game.getEnemies().add(necropick);\r\n                            }\r\n                            for(Omenoct omenoct : wave.wave1EasyOmenoct){\r\n                                Game.getOmenocts().add(omenoct);\r\n                                Game.getEnemies().add(omenoct);\r\n\r\n                            }\r\n                            for(Archmire archmire : wave.wave1EasyArchmire){\r\n                                Game.getArchmires().add(archmire);\r\n                                Game.getEnemies().add(archmire);\r\n\r\n                            }\r\n                 //           BlackOrbFrame blackOrbFrame = new BlackOrbFrame(200,200);\r\n                            BlackOrbArray.createBlackOrbArray(200,150);\r\n                            BlackOrbArray.createInvisibleFrame();\r\n//\r\n//                            for(Barricados barricados : wave.wave1EasyBarricados){\r\n//                            BarricadosFrame barricadosFrame = new BarricadosFrame(300,300, BarricadosType.T2);\r\n//                    //        BarricadosFrame barricadosFrame1 = new BarricadosFrame(500,30, BarricadosType.T2);\r\n//                       //         BarricadosFrame barricadosFrame2 = new BarricadosFrame(500,600, BarricadosType.T2);\r\n//                        //        BarricadosFrame barricadosFrame3 = new BarricadosFrame(1000,300, BarricadosType.T2);\r\n//                             Game.getBarricadosFrames().add(barricadosFrame);\r\n//                 //           Game.getBarricadosFrames().add(barricadosFrame1);\r\n//                       //         Game.getBarricadosFrames().add(barricadosFrame2);\r\n//                        //        Game.getBarricadosFrames().add(barricadosFrame3);\r\n//                            Game.getFrames().add(barricadosFrame);\r\n//                //           Game.getFrames().add(barricadosFrame1);\r\n//                    //            Game.getFrames().add(barricadosFrame2);\r\n//                    //            Game.getFrames().add(barricadosFrame3);\r\n//\r\n//                               Game.getBarricados().add(barricados);\r\n//                //                Game.getEnemies().add(barricados);\r\n//\r\n//                           }\r\n                        }else        if(SettingsFrame.getChosenLevel()==1) {\r\n                            for (Squarantine squarantine : wave.wave1MediumSquarantine) {\r\n                                Controller.Game.getSquarantine().add(squarantine);\r\n                                Controller.Game.getEnemies().add(squarantine);\r\n                            }\r\n                            for (Trigorath trigorath : wave.wave1MediumTrigorath) {\r\n                                Controller.Game.getTrigoraths().add(trigorath);\r\n                                Controller.Game.getEnemies().add(trigorath);\r\n                            }\r\n                        }else  if(SettingsFrame.getChosenLevel()==2) {\r\n                            for (Squarantine squarantine : wave.wave1HardSquarantine) {\r\n                                Controller.Game.getSquarantine().add(squarantine);\r\n                                Controller.Game.getEnemies().add(squarantine);\r\n                            }\r\n                            for (Trigorath trigorath : wave.wave1HardTrigorath) {\r\n                                Game.getTrigoraths().add(trigorath);\r\n                                Game.getEnemies().add(trigorath);\r\n                            }\r\n                        }\r\n                        wave1Created = true;\r\n                        GameInfo.setCurrentWave(1);\r\n                    }\r\n\r\n                    try {\r\n                        objectsIntersection = new ObjectsIntersection(Game.getGameFrame());\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n\r\n\r\n                    //if wave 1 ended create wave2\r\n                    if (!wave2Created) {\r\n                        for (Trigorath trigorath : Game.getTrigoraths()) {\r\n                            if (trigorath.isDead()) {\r\n                                deadT++;\r\n\r\n                            }\r\n                        }\r\n                        for (Squarantine squarantine : Game.getSquarantine()) {\r\n                            if (squarantine.isDead()) {\r\n                                deadS++;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if (deadT >= Game.getTrigoraths().size() && deadS >= Game.getSquarantine().size()) {\r\n                        timeBetweenWave++;\r\n                        if (timeBetweenWave > 500){\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n                            Game.getEnemies().clear();\r\n                            //    if(nextWave>=200) {\r\n                            wave.initWave2();\r\n                            if (!wave2Created && wave1Created) {\r\n                                Game.getSoundPlayer().playSoundEffect(\"src/Sound/wave.wav\");\r\n\r\n                                if(SettingsFrame.getChosenLevel()==0) {\r\n                                    for (Squarantine squarantine : wave.wave2EasySquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                        Game.getEnemies().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave2EasyTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                        Game.getEnemies().add(trigorath);\r\n                                    }\r\n                                }else        if(SettingsFrame.getChosenLevel()==1) {\r\n                                    for (Squarantine squarantine : wave.wave2MediumSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                        Game.getEnemies().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave2MediumTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                        Game.getEnemies().add(trigorath);\r\n                                    }\r\n                                }else  if(SettingsFrame.getChosenLevel()==2) {\r\n                                    for (Squarantine squarantine : wave.wave2HardSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                        Game.getEnemies().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave2HardTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                        Game.getEnemies().add(trigorath);\r\n                                    }\r\n                                }\r\n                                wave2Created = true;\r\n                                GameInfo.setCurrentWave(2);\r\n                            }\r\n                            timeBetweenWave = 0;\r\n\r\n                        }\r\n                    }\r\n                    deadS = 0;\r\n                    deadT =0 ;\r\n                    if(!wave3Created) {\r\n                        for (Trigorath trigorath : Game.getTrigoraths()) {\r\n                            if (trigorath.isDead()) {\r\n                                deadT++;\r\n\r\n                            }\r\n                        }\r\n                        for (Squarantine squarantine : Game.getSquarantine()) {\r\n                            if (squarantine.isDead()) {\r\n                                deadS++;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if(deadT>= Game.getTrigoraths().size() && deadS>= Game.getSquarantine().size()) {\r\n                        timeBetweenWave++;\r\n                        if (timeBetweenWave > 500) {\r\n\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n                            Game.getEnemies().clear();\r\n\r\n                            wave.initWave3();\r\n                            if (!wave3Created && wave2Created) {\r\n                                Game.getSoundPlayer().playSoundEffect(\"src/Sound/wave.wav\");\r\n\r\n                                if(SettingsFrame.getChosenLevel()==0) {\r\n                                    for (Squarantine squarantine : Wave.wave3EasySquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                        Game.getEnemies().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave3EasyTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                        Game.getEnemies().add(trigorath);\r\n                                    }\r\n                                }else        if(SettingsFrame.getChosenLevel()==1) {\r\n                                    for (Squarantine squarantine : wave.wave3MediumSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                        Game.getEnemies().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave3MediumTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                        Game.getEnemies().add(trigorath);\r\n                                    }\r\n                                }else  if(SettingsFrame.getChosenLevel()==2) {\r\n                                    for (Squarantine squarantine : wave.wave3HardSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                        Game.getEnemies().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave3HardTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                        Game.getEnemies().add(trigorath);\r\n                                    }\r\n                                }\r\n                                wave3Created = true;\r\n                                GameInfo.setCurrentWave(3);\r\n                            }\r\n                            timeBetweenWave = 0;\r\n                        }\r\n                    }\r\n\r\n                    deadS = 0;\r\n                    deadT =0 ;\r\n                    if(wave3Created) {\r\n                        for (Trigorath trigorath : Game.getTrigoraths()) {\r\n                            if (trigorath.isDead()) {\r\n                                deadT++;\r\n\r\n                            }\r\n                        }\r\n                        for (Squarantine squarantine : Game.getSquarantine()) {\r\n                            if (squarantine.isDead()) {\r\n                                deadS++;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if(deadT>= Game.getTrigoraths().size() && deadS>= Game.getSquarantine().size()){\r\n                        win = true;\r\n                        if(Game.getEpsilon().getRadius()<GamePanel.getFRAME_WIDTH() && Game.getEpsilon().getRadius()<=GamePanel.getFRAME_HEIGHT()) {\r\n                            Game.getEpsilon().setRadius(Game.getEpsilon().getRadius() + 1);\r\n\r\n                        }\r\n\r\n                    }\r\n                    if(win && !hasPlayed){\r\n                        Game.getSoundPlayer().playSoundEffect(\"src/Sound/gameover.wav\");\r\n                        hasPlayed = true;\r\n                    }\r\n\r\n                    if((GamePanel.getFRAME_HEIGHT()<=0 || GamePanel.getFRAME_WIDTH()<=0) && win){\r\n\r\n\r\n                        int purchase = JOptionPane.showOptionDialog(GlassFrame.getINSTANCE(),\r\n                                \"You won! XP:\"+ MyProject.getGameInfo().getXP(), null, JOptionPane.DEFAULT_OPTION,\r\n                                JOptionPane.PLAIN_MESSAGE, null, option, option[0]);\r\n\r\n\r\n                        if(purchase == 0){\r\n\r\n                         //   GlassFrame.getINSTANCE().closeFrame();\r\n\r\n                        new StarterMenu();\r\n                            Game.getSoundPlayer().stopBackgroundMusic();\r\n\r\n                            wave1Created =  false;\r\n                            wave2Created = false;\r\n                            wave3Created = false;\r\n                            countTime = 0;\r\n                            seconds = 0;\r\n                            minutes = 0;\r\n                            banishTime = 0;\r\n                            win = false;\r\n                                 ShopFrame.setHealItem(false);\r\n                            ShopFrame.setBanishItem(false);\r\n                            ShopFrame.setEmpowerItem(false);\r\n                            skillTreeController.setCanUseAbility(false);\r\n                            skillTreeController.setCurrentTime(0);\r\n                            skillTreeController.setLastUsed(0);\r\n                            skillTreeController.setAcesoTimer(0);\r\n                            deadS = 0;\r\n                            deadT = 0;\r\n                            intersectionSide = null;\r\n                            KeyListener.setPauseGame(true);\r\n                            GamePanel.setFRAME_WIDTH(700);\r\n                            GamePanel.setFRAME_HEIGHT(700);\r\n                            gameDone = true;\r\n                            lastXP = Game.getEpsilon().getXP();\r\n                            KeyListener.setKeyPressedNumber(0);\r\n                            KeyListener.setAbilityKeyPressed(false);\r\n                            GameInfo.getCurrentAbility().clear();\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n                            Game.getEnemies().clear();\r\n\r\n                            Game.getEpsilon().getVertex().clear();\r\n                            hasPlayed = false;\r\n                            timer.stop();\r\n                            elapsedTimer.stop();\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    if(Game.getEpsilon().getHP()<=0) lose = true;\r\n                    if(lose && !hasPlayed){\r\n                        Game.getSoundPlayer().playSoundEffect(\"src/Sound/gameover.wav\");\r\n                        GamePanel.setFRAME_WIDTH(0);\r\n                        GamePanel.setFRAME_HEIGHT(0);\r\n                        hasPlayed = true;\r\n                    }\r\n                    if( lose ) {\r\n\r\n                        frameSize.shrink();\r\n                        GamePanel.setFRAME_WIDTH(0);\r\n                        GamePanel.setFRAME_HEIGHT(0);\r\n                        int purchase = JOptionPane.showOptionDialog(GlassFrame.getINSTANCE(),\r\n                                \"You lost :( XP:\" + MyProject.getGameInfo().getXP(), null, JOptionPane.DEFAULT_OPTION,\r\n                                JOptionPane.PLAIN_MESSAGE, null, option, option[0]);\r\n\r\n                        if (purchase == 0) {\r\n\r\n                            new StarterMenu();\r\n                            Game.getSoundPlayer().stopBackgroundMusic();\r\n                            wave1Created = false;\r\n                            wave2Created = false;\r\n                            wave3Created = false;\r\n                            countTime = 0;\r\n                            seconds = 0;\r\n                            minutes = 0;\r\n                            banishTime = 0;\r\n                            skillTreeController.setAcesoTimer(0);\r\n                            win = false;\r\n                                 ShopFrame.setHealItem(false);\r\n                            ShopFrame.setBanishItem(false);\r\n                            ShopFrame.setEmpowerItem(false);\r\n                            skillTreeController.setCanUseAbility(false);\r\n                            skillTreeController.setCurrentTime(0);\r\n                            skillTreeController.setLastUsed(0);\r\n                            deadS = 0;\r\n                            deadT = 0;\r\n                            intersectionSide = null;\r\n                            KeyListener.setPauseGame(true);\r\n\r\n                            gameDone = true;\r\n                            lastXP = Game.getEpsilon().getXP();\r\n                            KeyListener.setKeyPressedNumber(0);\r\n                            KeyListener.setAbilityKeyPressed(false);\r\n                            GameInfo.getCurrentAbility().clear();\r\n                            SkillTreeFrame.setCurrentXP(Game.getEpsilon().getXP());\r\n                            Game.getEpsilon().getVertex().clear();\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n                            Game.getEnemies().clear();\r\n                            hasPlayed = false;\r\n                            lose = false;\r\n                            timer.stop();\r\n                            elapsedTimer.stop();\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    if (!ShopFrame.isEmpowerItem()) {\r\n                        for (ShotGun shotGun : Game.getShots()) {\r\n                            shotGun.move();\r\n                        }\r\n                    }\r\n\r\n                    for(int i = 0; i< Game.getSquarantine().size(); i++) {\r\n                        Squarantine squarantine = Game.getSquarantine().get(i);\r\n                        squarantine.move();\r\n\r\n                    }\r\n                    for (int i = 0; i < Game.getTrigoraths().size(); i++) {\r\n                        Trigorath trigorath = Game.getTrigoraths().get(i);\r\n                 //      trigorath.move();\r\n\r\n                    }\r\n                    Game.getEpsilon().move();\r\n\r\n                    for(Vertex vertex : Game.getEpsilon().getVertex()){\r\n                        vertex.move();\r\n                    }\r\n                    for(Cerberus cerberus : Game.getCerberuses()) cerberus.move();\r\n\r\n                    objectsIntersection.shotIntersectsEntity();\r\n                    objectsIntersection.epsilonIntersectsCollectible();\r\n                    objectsIntersection.enemyIntersection();\r\n                    objectsIntersection.vertexIntersectsNecropick();\r\n                    objectsIntersection.vertexIntersectsOmenoct();\r\n                   objectsIntersection.AOEIntersection();\r\n                   objectsIntersection.epsilonIntersectsEnemy();\r\n                   objectsIntersection.vertexIntersectsOrb();\r\n\r\n\r\n\r\n\r\n                    try {\r\n                        frameSize = new FrameSize(game.getGameFrame());\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                    //shrinkage starts after 10 seconds\r\n                    if (countTime >= 50 ) {\r\n\r\n                        frameSize.shrink();\r\n                    }\r\n\r\n\r\n                    //check if a shot intersects with frame edges\r\n                    // if so expansion starts from that side for a second\r\n                    // and impact mechanism activates from that point\r\n\r\n                    for(ShotGun shotGun : Game.getShots()){\r\n\r\n                        if(shotGun.isVisible()) intersectionSide = objectsIntersection.shotIntersectsFrame(shotGun);\r\n                        if (intersectionSide != null) {\r\n\r\n                            if (shotGun.getExpansion() < 15) {\r\n                                frameSize.expand(intersectionSide);\r\n                                shotGun.setExpansion(shotGun.getExpansion() + 1);\r\n\r\n                                IntersectionPoint point = new IntersectionPoint(new Point2D.Double(shotGun.getX(), shotGun.getY()),5,false,false,null,shotGun);\r\n                                ObjectsIntersection.getIntersectionPoints().add(point);\r\n                         //       shotGun.setVisible(false);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    skillTreeController.ableToUseAbility();\r\n                    skillTreeController.activate();\r\n\r\n\r\n                    for(GameObjects enemy : Game.getEnemies()) enemy.invisibleCollectible();\r\n\r\n                    countTime++;\r\n\r\n                    for(int i = 0; i< ObjectsIntersection.getIntersectionPoints().size(); i++){\r\n                        IntersectionPoint point = ObjectsIntersection.getIntersectionPoints().get(i);\r\n                        point.setElapsedTime(point.getElapsedTime()+1);\r\n                        if(point.getElapsedTime()>=point.getTime()){\r\n                            ObjectsIntersection.getIntersectionPoints().remove(point);\r\n                        }\r\n                    }\r\n                    shopController.activate();\r\n                    ShopController.canUSe();\r\n\r\n\r\n\r\n                    for(Necropick necropick : Game.getNecropicks()){\r\n                        necropick.visible();\r\n                        necropick.move();\r\n                        necropick.shoot();\r\n                    }\r\n\r\n                    for(Omenoct omenoct : Game.getOmenocts()){\r\n                        omenoct.chooseSide();\r\n                        omenoct.move();\r\n                        omenoct.shoot();\r\n                    }\r\n                    for(Archmire archmire : Game.getArchmires()){\r\n                        archmire.move();\r\n                        archmire.fadeFootprint();\r\n\r\n                    }\r\n\r\n                    for(JFrame frame : Game.getFrames()) {\r\n                        if (!frame.equals(Game.getEpsilon().getLocalFrame())) {\r\n                            frameIntersection.changeLocalFrame(frame, Game.getEpsilon());\r\n                        }\r\n                    }\r\n                    for(ShotGun shotGun : Game.getShots()) {\r\n                        for (JFrame frame : Game.getFrames()) {\r\n                            if (!frame.equals(Game.getEpsilon().getLocalFrame())) {\r\n                                frameIntersection.changeLocalFrame(frame, shotGun);\r\n                            }\r\n                        }\r\n                    }\r\n                    for(Trigorath trigorath : Game.getTrigoraths()) {\r\n                        for (JFrame frame : Game.getFrames()) {\r\n                            if (!frame.equals(Game.getEpsilon().getLocalFrame())) {\r\n                                frameIntersection.changeLocalFrame(frame, trigorath);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                  for(Vertex vertex : Game.getEpsilon().getVertex()){\r\n                      for(JFrame frame : Game.getFrames()){\r\n                          frameIntersection.changeLocalFrame(frame,vertex);\r\n                      }\r\n                  }\r\n\r\n\r\n\r\n             //       Game.getGameFrame().repaint();\r\n                    for(JFrame frame : Game.getFrames()) frame.getContentPane().repaint();\r\n             //       for(InvisibleFrame invisibleFrame : Game.getInvisibleFrames()) invisibleFrame.getContentPane().repaint();\r\n\r\n                    for(BarricadosFrame barricadosFrame : Game.getBarricadosFrames()) {\r\n\r\n\r\n                        barricadosFrame.getContentPane().repaint();\r\n\r\n                        barricadosFrame.getBarricados().invisible();\r\n                        barricadosFrame.invisible();\r\n\r\n\r\n                    }\r\n                    for (BlackOrbFrame blackOrbFrame : Game.getBlackOrbFrames()) blackOrbFrame.getContentPane().repaint();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n        timer.start();\r\n    }\r\n\r\n    public static int getSeconds() {\r\n        return seconds;\r\n    }\r\n\r\n    public static int getMinutes() {\r\n        return minutes;\r\n    }\r\n\r\n    public static boolean isWin() {\r\n        return win;\r\n    }\r\n\r\n    public static boolean isGameDone() {\r\n        return gameDone;\r\n    }\r\n\r\n    public static boolean isLose() {\r\n        return lose;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/GameLoop.java b/src/Model/GameLoop.java
--- a/src/Model/GameLoop.java	(revision 9284835a0529db31e6908fadd076c4305ce36599)
+++ b/src/Model/GameLoop.java	(date 1720259749757)
@@ -141,7 +141,7 @@
 //
 //                           }
                         }else        if(SettingsFrame.getChosenLevel()==1) {
-                            for (Squarantine squarantine : wave.wave1MediumSquarantine) {
+                            for (Model.Entity.Squarantine squarantine : wave.wave1MediumSquarantine) {
                                 Controller.Game.getSquarantine().add(squarantine);
                                 Controller.Game.getEnemies().add(squarantine);
                             }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"added laser collision for epsilon\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Entity/Epsilon.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Epsilon.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameLoop.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameLoop.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/ObjectsIntersection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/ObjectsIntersection.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package-info\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"master\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"wyrm\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2eomOtKF3m1dtnE0xNY8YwEPx1Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"masterV2.0\",\r\n    \"last_opened_file_path\": \"C:/inetpub/puzzle5\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\" />\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\\images\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\\Sound\" />\r\n    </key>\r\n    <key name=\"MoveMembersDialog.RECENTS_KEY\">\r\n      <recent name=\"Controller.Game\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WindowKill2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"\" />\r\n      <created>1712579277915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712579277915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added a structure to the game\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580191999</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580191999</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added shotgun for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580372590</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580372590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"changing game frame size applied\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580642206</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580642206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"epsilon remains in game frame while shrinking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580834325</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580834325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"resolved conflict in settings branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712729501227</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712729501227</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"resolved a problem in displaying buttons on starter menu\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712730558884</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712730558884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"collision for Squarantine\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712772176634</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712772176634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"epsilon/collectible intersection got more accurate\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713347339136</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713347339136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"fixed bug in unlocking abilities\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713533798835</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713533798835</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"2/3 abilities created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713612581555</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713612581555</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"added vertex for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713673748783</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713673748783</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"impact mechanism for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713702488861</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713702488861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"added waves\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714120152071</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714120152071</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"added sound settings\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714454036121</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714454036121</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"made collisions cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717095490220</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717095490220</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"made paint methods cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717167729736</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717167729736</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"made paint methods cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717167734907</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717167734907</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"added structure to the updated skillTree\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717170418129</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717170418129</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"added structure to shopV2.0\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717488270113</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717488270113</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Archmire footprint\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719571995764</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719571995764</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"epsilon moves between glassframe and barricados frame\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719818796448</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719818796448</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"made epsilon transition better\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719823532720</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719823532720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"created barricads type2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719843854408</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719843854408</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"added invisibility to Barricados\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719847833715</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719847833715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"shrinkage mechanism for non-isometric frames\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719851754569</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719851754569</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"added image to Barricados\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719857984196</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719857984196</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"created orbs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719935080958</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719935080958</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"epsilon shots orbs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720020906687</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720020906687</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"added collectibles to BlackOrb\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720022876721</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720022876721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"added laser collision for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720083256307</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720083256307</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"31\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"resolved conflict in settings branch\" />\r\n    <MESSAGE value=\"resolved a problem in displaying buttons on starter menu\" />\r\n    <MESSAGE value=\"collision for Squarantine\" />\r\n    <MESSAGE value=\"epsilon/collectible intersection got more accurate\" />\r\n    <MESSAGE value=\"fixed bug in unlocking abilities\" />\r\n    <MESSAGE value=\"2/3 abilities created\" />\r\n    <MESSAGE value=\"added vertex for epsilon\" />\r\n    <MESSAGE value=\"impact mechanism for epsilon\" />\r\n    <MESSAGE value=\"added waves\" />\r\n    <MESSAGE value=\"added sound settings\" />\r\n    <MESSAGE value=\"made collisions cleaner\" />\r\n    <MESSAGE value=\"made paint methods cleaner\" />\r\n    <MESSAGE value=\"added structure to the updated skillTree\" />\r\n    <MESSAGE value=\"added structure to shopV2.0\" />\r\n    <MESSAGE value=\"Archmire footprint\" />\r\n    <MESSAGE value=\"epsilon moves between glassframe and barricados frame\" />\r\n    <MESSAGE value=\"made epsilon transition better\" />\r\n    <MESSAGE value=\"created barricads type2\" />\r\n    <MESSAGE value=\"added invisibility to Barricados\" />\r\n    <MESSAGE value=\"shrinkage mechanism for non-isometric frames\" />\r\n    <MESSAGE value=\"added image to Barricados\" />\r\n    <MESSAGE value=\"created orbs\" />\r\n    <MESSAGE value=\"epsilon shots orbs\" />\r\n    <MESSAGE value=\"added collectibles to BlackOrb\" />\r\n    <MESSAGE value=\"added laser collision for epsilon\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added laser collision for epsilon\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9284835a0529db31e6908fadd076c4305ce36599)
+++ b/.idea/workspace.xml	(date 1720259749757)
@@ -5,9 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="added laser collision for epsilon">
-      <change beforePath="$PROJECT_DIR$/src/Model/Entity/Epsilon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Epsilon.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Model/GameLoop.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameLoop.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/ObjectsIntersection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/ObjectsIntersection.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -54,14 +52,14 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "masterV2.0",
-    "last_opened_file_path": "C:/inetpub/puzzle5"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;masterV2.0&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/inetpub/puzzle5&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\Namazi\Ap2024\WindowKill2\src" />
@@ -332,7 +330,23 @@
       <option name="project" value="LOCAL" />
       <updated>1720083256307</updated>
     </task>
-    <option name="localTasksCounter" value="31" />
+    <task id="LOCAL-00031" summary="resolved conflicts in package naming">
+      <option name="closed" value="true" />
+      <created>1720259345119</created>
+      <option name="number" value="00031" />
+      <option name="presentableId" value="LOCAL-00031" />
+      <option name="project" value="LOCAL" />
+      <updated>1720259345119</updated>
+    </task>
+    <task id="LOCAL-00032" summary="resolved conflicts in package naming">
+      <option name="closed" value="true" />
+      <created>1720259606570</created>
+      <option name="number" value="00032" />
+      <option name="presentableId" value="LOCAL-00032" />
+      <option name="project" value="LOCAL" />
+      <updated>1720259606570</updated>
+    </task>
+    <option name="localTasksCounter" value="33" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -347,7 +361,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="resolved conflict in settings branch" />
     <MESSAGE value="resolved a problem in displaying buttons on starter menu" />
     <MESSAGE value="collision for Squarantine" />
     <MESSAGE value="epsilon/collectible intersection got more accurate" />
@@ -372,6 +385,7 @@
     <MESSAGE value="epsilon shots orbs" />
     <MESSAGE value="added collectibles to BlackOrb" />
     <MESSAGE value="added laser collision for epsilon" />
-    <option name="LAST_COMMIT_MESSAGE" value="added laser collision for epsilon" />
+    <MESSAGE value="resolved conflicts in package naming" />
+    <option name="LAST_COMMIT_MESSAGE" value="resolved conflicts in package naming" />
   </component>
 </project>
\ No newline at end of file
