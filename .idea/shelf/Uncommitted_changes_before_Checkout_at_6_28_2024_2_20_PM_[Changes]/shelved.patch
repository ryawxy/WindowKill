Index: src/Model/Wave.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model;\r\n\r\nimport Model.Entity.*;\r\nimport Model.enums.Size;\r\nimport View.SettingsFrame;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Wave {\r\n\r\n    public  ArrayList<Trigorath> wave1EasyTrigorath = new ArrayList<>();\r\n    public  ArrayList<Squarantine> wave1EasySquarantine = new ArrayList<>();\r\n    public  ArrayList<Necropick> wave1EasyNecropicks = new ArrayList<>();\r\n    public  ArrayList<Omenoct> wave1EasyOmenoct = new ArrayList<>();\r\n    public  ArrayList<Archmire> wave1EasyArchmire = new ArrayList<>();\r\n\r\n    public  ArrayList<Trigorath> wave1MediumTrigorath = new ArrayList<>();\r\n    public  ArrayList<Squarantine> wave1MediumSquarantine = new ArrayList<>();\r\n\r\n    public  ArrayList<Trigorath> wave1HardTrigorath = new ArrayList<>();\r\n    public  ArrayList<Squarantine> wave1HardSquarantine = new ArrayList<>();\r\n\r\n    public  ArrayList<Trigorath> wave2EasyTrigorath = new ArrayList<>();\r\n    public  ArrayList<Squarantine> wave2EasySquarantine = new ArrayList<>();\r\n\r\n    public  ArrayList<Trigorath> wave2MediumTrigorath = new ArrayList<>();\r\n    public  ArrayList<Squarantine> wave2MediumSquarantine = new ArrayList<>();\r\n\r\n    public  ArrayList<Trigorath> wave2HardTrigorath = new ArrayList<>();\r\n    public  ArrayList<Squarantine> wave2HardSquarantine = new ArrayList<>();\r\n    public ArrayList<Trigorath> wave3EasyTrigorath = new ArrayList<>();\r\n    public static ArrayList<Squarantine> wave3EasySquarantine = new ArrayList<>();\r\n\r\n    public ArrayList<Trigorath> wave3MediumTrigorath = new ArrayList<>();\r\n    public ArrayList<Squarantine> wave3MediumSquarantine = new ArrayList<>();\r\n\r\n    public ArrayList<Trigorath> wave3HardTrigorath = new ArrayList<>();\r\n    public ArrayList<Squarantine> wave3HardSquarantine = new ArrayList<>();\r\n\r\n\r\n\r\n  static   Squarantine squarantine;\r\n   static Trigorath trigorath;\r\n\r\npublic  void initWave1(){\r\n\r\n\r\n    if(SettingsFrame.getChosenLevel()==0){\r\n        int [] xPoints = {50,40,60};\r\n        int [] yPoints = {20,40,40};\r\n\r\n        int [] xPoints2 = {150,140,160};\r\n        int [] yPoints2 = {120,140,140};\r\n\r\n        int [] xPoints3 = {250,240,260};\r\n        int [] yPoints3 = {220,240,240};\r\n\r\n        int [] xPoints4 = {75,95,95,75};\r\n        int [] yPoints4 = {75,75,95,95};\r\n\r\n        int [] xPoints5 = {175,195,195,175};\r\n        int [] yPoints5 = {175,175,195,195};\r\n\r\n        int[] xPoints6 = {370,360,340,330,340,360};\r\n        int[] yPoints6 = {350, (int) (350+20*Math.sqrt(3)/2),(int) (350+20*Math.sqrt(3)/2),350,(int) (350-20*Math.sqrt(3)/2),(int) (350-20*Math.sqrt(3)/2)};\r\n\r\n        Omenoct omenoct = new Omenoct(350,350);\r\n        omenoct.setxPoints(xPoints6);\r\n        omenoct.setyPoints(yPoints6);\r\n        wave1EasyOmenoct.add(omenoct);\r\n//\r\n//        squarantine = new Squarantine(185,185);\r\n//        squarantine.setxPoints(xPoints5);\r\n//        squarantine.setyPoints(yPoints5);\r\n//        wave1EasySquarantine.add(squarantine);\r\n//\r\n//        trigorath = new Trigorath(50,33);\r\n//        trigorath.setxPoints(xPoints);\r\n//        trigorath.setyPoints(yPoints);\r\n//        wave1EasyTrigorath.add(trigorath);\r\n//\r\n//        trigorath = new Trigorath(150,133);\r\n//        trigorath.setxPoints(xPoints2);\r\n//        trigorath.setyPoints(yPoints2);\r\n//        wave1EasyTrigorath.add(trigorath);\r\n\r\n        trigorath = new Trigorath(250,233);\r\n        trigorath.setxPoints(xPoints3);\r\n        trigorath.setyPoints(yPoints3);\r\n        wave1EasyTrigorath.add(trigorath);\r\n\r\n        Archmire archmire = new Archmire(50,50, Size.MINI);\r\n        wave1EasyArchmire.add(archmire);\r\n\r\n        Necropick necropick = new Necropick(300,300);\r\n        wave1EasyNecropicks.add(necropick);\r\n    }\r\n    if(SettingsFrame.getChosenLevel()==1){\r\n        int [] xPoints = {50,40,60};\r\n        int [] yPoints = {20,40,40};\r\n\r\n        int [] xPoints2 = {150,140,160};\r\n        int [] yPoints2 = {120,140,140};\r\n\r\n        int [] xPoints3 = {250,240,260};\r\n        int [] yPoints3 = {220,240,240};\r\n\r\n        int [] xPoints4 = {75,95,95,75};\r\n        int [] yPoints4 = {75,75,95,95};\r\n\r\n        int [] xPoints5 = {675,695,695,675};\r\n        int [] yPoints5 = {675,675,695,695};\r\n\r\n\r\n        squarantine = new Squarantine(685,685);\r\n        squarantine.setxPoints(xPoints5);\r\n        squarantine.setyPoints(yPoints5);\r\n        wave1MediumSquarantine.add(squarantine);\r\n\r\n        squarantine = new Squarantine(85,85);\r\n        squarantine.setxPoints(xPoints4);\r\n        squarantine.setyPoints(yPoints4);\r\n        wave1MediumSquarantine.add(squarantine);\r\n\r\n        trigorath = new Trigorath(50,33);\r\n        trigorath.setxPoints(xPoints);\r\n        trigorath.setyPoints(yPoints);\r\n        wave1MediumTrigorath.add(trigorath);\r\n\r\n        trigorath = new Trigorath(150,133);\r\n        trigorath.setxPoints(xPoints2);\r\n        trigorath.setyPoints(yPoints2);\r\n        wave1MediumTrigorath.add(trigorath);\r\n\r\n        trigorath = new Trigorath(250,233);\r\n        trigorath.setxPoints(xPoints3);\r\n        trigorath.setyPoints(yPoints3);\r\n        wave1MediumTrigorath.add(trigorath);\r\n    }\r\n    if(SettingsFrame.getChosenLevel()==2){\r\n        int [] xPoints = {50,40,60};\r\n        int [] yPoints = {20,40,40};\r\n\r\n        int [] xPoints2 = {150,140,160};\r\n        int [] yPoints2 = {120,140,140};\r\n\r\n        int [] xPoints3 = {250,240,260};\r\n        int [] yPoints3 = {220,240,240};\r\n\r\n        int [] xPoints4 = {75,95,95,75};\r\n        int [] yPoints4 = {75,75,95,95};\r\n\r\n        int [] xPoints5 = {675,695,695,675};\r\n        int [] yPoints5 = {675,675,695,695};\r\n\r\n        int [] xPoints6 = {450,440,460};\r\n        int [] yPoints6 = {420,440,440};\r\n\r\n        squarantine = new Squarantine(685,685);\r\n        squarantine.setxPoints(xPoints5);\r\n        squarantine.setyPoints(yPoints5);\r\n        wave1HardSquarantine.add(squarantine);\r\n\r\n        squarantine = new Squarantine(85,85);\r\n        squarantine.setxPoints(xPoints4);\r\n        squarantine.setyPoints(yPoints4);\r\n        wave1HardSquarantine.add(squarantine);\r\n\r\n        trigorath = new Trigorath(50,33);\r\n        trigorath.setxPoints(xPoints);\r\n        trigorath.setyPoints(yPoints);\r\n        wave1HardTrigorath.add(trigorath);\r\n\r\n        trigorath = new Trigorath(150,133);\r\n        trigorath.setxPoints(xPoints2);\r\n        trigorath.setyPoints(yPoints2);\r\n        wave1HardTrigorath.add(trigorath);\r\n\r\n        trigorath = new Trigorath(250,233);\r\n        trigorath.setxPoints(xPoints3);\r\n        trigorath.setyPoints(yPoints3);\r\n        wave1HardTrigorath.add(trigorath);\r\n\r\n        trigorath = new Trigorath(450,433);\r\n        trigorath.setxPoints(xPoints6);\r\n        trigorath.setyPoints(yPoints6);\r\n        wave1HardTrigorath.add(trigorath);\r\n    }\r\n\r\n}\r\n\r\n    public void initWave2(){\r\n        if(SettingsFrame.getChosenLevel()==0){\r\n            int [] xPoints = {50,40,60};\r\n            int [] yPoints = {20,40,40};\r\n\r\n            int [] xPoints2 = {150,140,160};\r\n            int [] yPoints2 = {120,140,140};\r\n\r\n            int [] xPoints4 = {75,95,95,75};\r\n            int [] yPoints4 = {75,75,95,95};\r\n\r\n            int [] xPoints5 = {275,295,295,275};\r\n            int [] yPoints5 = {275,275,295,295};\r\n\r\n            squarantine = new Squarantine(85,85);\r\n            squarantine.setxPoints(xPoints4);\r\n            squarantine.setyPoints(yPoints4);\r\n            wave2EasySquarantine.add(squarantine);\r\n\r\n//            squarantine = new Squarantine(285,285);\r\n//            squarantine.setxPoints(xPoints5);\r\n//            squarantine.setyPoints(yPoints5);\r\n//            wave2EasySquarantine.add(squarantine);\r\n//\r\n//            trigorath = new Trigorath(50,33);\r\n//            trigorath.setxPoints(xPoints);\r\n//            trigorath.setyPoints(yPoints);\r\n//            wave2EasyTrigorath.add(trigorath);\r\n//\r\n//            trigorath = new Trigorath(150,133);\r\n//            trigorath.setxPoints(xPoints2);\r\n//            trigorath.setyPoints(yPoints2);\r\n//            wave2EasyTrigorath.add(trigorath);\r\n\r\n\r\n        }\r\n        if(SettingsFrame.getChosenLevel()==1){\r\n            int [] xPoints = {50,40,60};\r\n            int [] yPoints = {20,40,40};\r\n\r\n            int [] xPoints2 = {150,140,160};\r\n            int [] yPoints2 = {120,140,140};\r\n\r\n            int [] xPoints4 = {75,95,95,75};\r\n            int [] yPoints4 = {75,75,95,95};\r\n\r\n            int [] xPoints5 = {275,295,295,275};\r\n            int [] yPoints5 = {275,275,295,295};\r\n\r\n            int [] xPoints6 = {575,595,595,575};\r\n            int [] yPoints6 = {575,575,595,595};\r\n\r\n            int [] xPoints7 = {275,295,295,275};\r\n            int [] yPoints7 = {275,275,295,295};\r\n\r\n            squarantine = new Squarantine(85,85);\r\n            squarantine.setxPoints(xPoints4);\r\n            squarantine.setyPoints(yPoints4);\r\n            wave2MediumSquarantine.add(squarantine);\r\n\r\n            squarantine = new Squarantine(585,585);\r\n            squarantine.setxPoints(xPoints6);\r\n            squarantine.setyPoints(yPoints6);\r\n            wave2MediumSquarantine.add(squarantine);\r\n\r\n            squarantine = new Squarantine(285,285);\r\n            squarantine.setxPoints(xPoints5);\r\n            squarantine.setyPoints(yPoints5);\r\n            wave2MediumSquarantine.add(squarantine);\r\n\r\n            trigorath = new Trigorath(50,33);\r\n            trigorath.setxPoints(xPoints);\r\n            trigorath.setyPoints(yPoints);\r\n            wave2MediumTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(150,133);\r\n            trigorath.setxPoints(xPoints2);\r\n            trigorath.setyPoints(yPoints2);\r\n            wave2MediumTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(250,233);\r\n            trigorath.setxPoints(xPoints7);\r\n            trigorath.setyPoints(yPoints7);\r\n            wave2MediumTrigorath.add(trigorath);\r\n\r\n        }\r\n        if(SettingsFrame.getChosenLevel()==2){\r\n            int [] xPoints = {50,40,60};\r\n            int [] yPoints = {20,40,40};\r\n\r\n            int [] xPoints2 = {150,140,160};\r\n            int [] yPoints2 = {120,140,140};\r\n\r\n            int [] xPoints3 = {250,240,260};\r\n            int [] yPoints3 = {220,240,240};\r\n\r\n            int [] xPoints4 = {75,95,95,75};\r\n            int [] yPoints4 = {75,75,95,95};\r\n\r\n            int [] xPoints5 = {675,695,695,675};\r\n            int [] yPoints5 = {675,675,695,695};\r\n\r\n            int [] xPoints6 = {450,440,460};\r\n            int [] yPoints6 = {420,440,440};\r\n\r\n            int [] xPoints7 = {550,540,560};\r\n            int [] yPoints7 = {520,540,540};\r\n\r\n\r\n            squarantine = new Squarantine(685,685);\r\n            squarantine.setxPoints(xPoints5);\r\n            squarantine.setyPoints(yPoints5);\r\n            wave2HardSquarantine.add(squarantine);\r\n\r\n            squarantine = new Squarantine(85,85);\r\n            squarantine.setxPoints(xPoints4);\r\n            squarantine.setyPoints(yPoints4);\r\n            wave2HardSquarantine.add(squarantine);\r\n\r\n//            trigorath = new Trigorath(50,33);\r\n//            trigorath.setxPoints(xPoints);\r\n//            trigorath.setyPoints(yPoints);\r\n//            wave2HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(150,133);\r\n            trigorath.setxPoints(xPoints2);\r\n            trigorath.setyPoints(yPoints2);\r\n            wave2HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(250,233);\r\n            trigorath.setxPoints(xPoints3);\r\n            trigorath.setyPoints(yPoints3);\r\n            wave2HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(450,433);\r\n            trigorath.setxPoints(xPoints6);\r\n            trigorath.setyPoints(yPoints6);\r\n            wave2HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(550,533);\r\n            trigorath.setxPoints(xPoints7);\r\n            trigorath.setyPoints(yPoints7);\r\n            wave2HardTrigorath.add(trigorath);\r\n        }\r\n    }\r\n    public void initWave3(){\r\n        if(SettingsFrame.getChosenLevel()==0){\r\n            int [] xPoints = {50,40,60};\r\n            int [] yPoints = {20,40,40};\r\n\r\n            int [] xPoints2 = {150,140,160};\r\n            int [] yPoints2 = {120,140,140};\r\n\r\n            int [] xPoints3 = {250,240,260};\r\n            int [] yPoints3 = {220,240,240};\r\n\r\n            int [] xPoints4 = {75,95,95,75};\r\n            int [] yPoints4 = {75,75,95,95};\r\n\r\n            int [] xPoints5 = {350,340,360};\r\n            int [] yPoints5 = {320,340,340};\r\n\r\n            int [] xPoints6 = {450,440,460};\r\n            int [] yPoints6 = {420,440,440};\r\n\r\n            int [] xPoints7 = {575,595,595,575};\r\n            int [] yPoints7 = {575,575,595,595};\r\n\r\n            squarantine = new Squarantine(85,85);\r\n            squarantine.setxPoints(xPoints4);\r\n            squarantine.setyPoints(yPoints4);\r\n            wave3EasySquarantine.add(squarantine);\r\n//\r\n            squarantine = new Squarantine(585,585);\r\n            squarantine.setxPoints(xPoints7);\r\n            squarantine.setyPoints(yPoints7);\r\n            wave3EasySquarantine.add(squarantine);\r\n\r\n            trigorath = new Trigorath(50,33);\r\n            trigorath.setxPoints(xPoints);\r\n            trigorath.setyPoints(yPoints);\r\n            wave3EasyTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(150,133);\r\n            trigorath.setxPoints(xPoints2);\r\n            trigorath.setyPoints(yPoints2);\r\n            wave3EasyTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(250,233);\r\n            trigorath.setxPoints(xPoints3);\r\n            trigorath.setyPoints(yPoints3);\r\n            wave3EasyTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(350,333);\r\n            trigorath.setxPoints(xPoints5);\r\n            trigorath.setyPoints(yPoints5);\r\n            wave3EasyTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(450,433);\r\n            trigorath.setxPoints(xPoints6);\r\n            trigorath.setyPoints(yPoints6);\r\n            wave3EasyTrigorath.add(trigorath);\r\n        }\r\n        if(SettingsFrame.getChosenLevel()==1){\r\n            int [] xPoints = {50,40,60};\r\n            int [] yPoints = {20,40,40};\r\n\r\n            int [] xPoints2 = {150,140,160};\r\n            int [] yPoints2 = {120,140,140};\r\n\r\n            int [] xPoints4 = {75,95,95,75};\r\n            int [] yPoints4 = {75,75,95,95};\r\n\r\n            int [] xPoints5 = {275,295,295,275};\r\n            int [] yPoints5 = {275,275,295,295};\r\n\r\n            int [] xPoints6 = {575,595,595,575};\r\n            int [] yPoints6 = {575,575,595,595};\r\n\r\n            int [] xPoints7 = {275,295,295,275};\r\n            int [] yPoints7 = {275,275,295,295};\r\n\r\n            int [] xPoints8 = {375,395,395,375};\r\n            int [] yPoints8 = {375,375,395,395};\r\n\r\n            squarantine = new Squarantine(85,85);\r\n            squarantine.setxPoints(xPoints4);\r\n            squarantine.setyPoints(yPoints4);\r\n            wave3MediumSquarantine.add(squarantine);\r\n\r\n            squarantine = new Squarantine(585,585);\r\n            squarantine.setxPoints(xPoints6);\r\n            squarantine.setyPoints(yPoints6);\r\n            wave3MediumSquarantine.add(squarantine);\r\n\r\n            squarantine = new Squarantine(285,285);\r\n            squarantine.setxPoints(xPoints5);\r\n            squarantine.setyPoints(yPoints5);\r\n            wave3MediumSquarantine.add(squarantine);\r\n\r\n\r\n            squarantine = new Squarantine(385,385);\r\n            squarantine.setxPoints(xPoints8);\r\n            squarantine.setyPoints(yPoints8);\r\n            wave3MediumSquarantine.add(squarantine);\r\n\r\n            trigorath = new Trigorath(50,33);\r\n            trigorath.setxPoints(xPoints);\r\n            trigorath.setyPoints(yPoints);\r\n            wave3MediumTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(150,133);\r\n            trigorath.setxPoints(xPoints2);\r\n            trigorath.setyPoints(yPoints2);\r\n            wave3MediumTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(250,233);\r\n            trigorath.setxPoints(xPoints7);\r\n            trigorath.setyPoints(yPoints7);\r\n            wave3MediumTrigorath.add(trigorath);\r\n        }\r\n        if(SettingsFrame.getChosenLevel()==2){\r\n            int [] xPoints = {50,40,60};\r\n            int [] yPoints = {20,40,40};\r\n\r\n            int [] xPoints2 = {150,140,160};\r\n            int [] yPoints2 = {120,140,140};\r\n\r\n            int [] xPoints3 = {250,240,260};\r\n            int [] yPoints3 = {220,240,240};\r\n\r\n            int [] xPoints4 = {75,95,95,75};\r\n            int [] yPoints4 = {75,75,95,95};\r\n\r\n            int [] xPoints5 = {675,695,695,675};\r\n            int [] yPoints5 = {675,675,695,695};\r\n\r\n            int [] xPoints6 = {450,440,460};\r\n            int [] yPoints6 = {420,440,440};\r\n\r\n            int [] xPoints7 = {550,540,560};\r\n            int [] yPoints7 = {520,540,540};\r\n\r\n            int [] xPoints8 = {275,295,295,275};\r\n            int [] yPoints8 = {275,275,295,295};\r\n\r\n            squarantine = new Squarantine(685,685);\r\n            squarantine.setxPoints(xPoints5);\r\n            squarantine.setyPoints(yPoints5);\r\n            wave3HardSquarantine.add(squarantine);\r\n//\r\n//            squarantine = new Squarantine(85,85);\r\n//            squarantine.setxPoints(xPoints4);\r\n//            squarantine.setyPoints(yPoints4);\r\n//            wave3HardSquarantine.add(squarantine);\r\n\r\n            squarantine = new Squarantine(285,285);\r\n            squarantine.setxPoints(xPoints8);\r\n            squarantine.setyPoints(yPoints8);\r\n            wave3HardSquarantine.add(squarantine);\r\n\r\n            trigorath = new Trigorath(50,33);\r\n            trigorath.setxPoints(xPoints);\r\n            trigorath.setyPoints(yPoints);\r\n            wave3HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(150,133);\r\n            trigorath.setxPoints(xPoints2);\r\n            trigorath.setyPoints(yPoints2);\r\n            wave3HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(250,233);\r\n            trigorath.setxPoints(xPoints3);\r\n            trigorath.setyPoints(yPoints3);\r\n            wave3HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(450,433);\r\n            trigorath.setxPoints(xPoints6);\r\n            trigorath.setyPoints(yPoints6);\r\n            wave3HardTrigorath.add(trigorath);\r\n\r\n            trigorath = new Trigorath(550,533);\r\n            trigorath.setxPoints(xPoints7);\r\n            trigorath.setyPoints(yPoints7);\r\n            wave3HardTrigorath.add(trigorath);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/Wave.java b/src/Model/Wave.java
--- a/src/Model/Wave.java	
+++ b/src/Model/Wave.java	
@@ -63,11 +63,11 @@
 
         int[] xPoints6 = {370,360,340,330,340,360};
         int[] yPoints6 = {350, (int) (350+20*Math.sqrt(3)/2),(int) (350+20*Math.sqrt(3)/2),350,(int) (350-20*Math.sqrt(3)/2),(int) (350-20*Math.sqrt(3)/2)};
-
-        Omenoct omenoct = new Omenoct(350,350);
-        omenoct.setxPoints(xPoints6);
-        omenoct.setyPoints(yPoints6);
-        wave1EasyOmenoct.add(omenoct);
+//
+//        Omenoct omenoct = new Omenoct(350,350);
+//        omenoct.setxPoints(xPoints6);
+//        omenoct.setyPoints(yPoints6);
+//        wave1EasyOmenoct.add(omenoct);
 //
 //        squarantine = new Squarantine(185,185);
 //        squarantine.setxPoints(xPoints5);
@@ -90,10 +90,10 @@
         wave1EasyTrigorath.add(trigorath);
 
         Archmire archmire = new Archmire(50,50, Size.MINI);
-        wave1EasyArchmire.add(archmire);
+  //      wave1EasyArchmire.add(archmire);
 
         Necropick necropick = new Necropick(300,300);
-        wave1EasyNecropicks.add(necropick);
+   //     wave1EasyNecropicks.add(necropick);
     }
     if(SettingsFrame.getChosenLevel()==1){
         int [] xPoints = {50,40,60};
Index: src/Model/Entity/Barricados.java
===================================================================
diff --git a/src/Model/Entity/Barricados.java b/src/Model/Entity/Barricados.java
new file mode 100644
--- /dev/null	
+++ b/src/Model/Entity/Barricados.java	
@@ -0,0 +1,4 @@
+package Model.Entity;
+
+public class Barricados {
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"created Omenoct\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/Model/Entity/Archmire.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Model/Entity/Footprint.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Model/enums/Size.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/View/entityViews/ArchmireView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/Constants.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/Constants.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/Game.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/ImpactSpeed.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/ImpactSpeed.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/KeyListener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/KeyListener.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/MouseListener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/MouseListener.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/ShopController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/ShopController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/SkillTreeController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/SkillTreeController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Ability.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/enums/Ability.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Archmire.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Cerberus.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Cerberus.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Collectible.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Collectible.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Direction.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/enums/Direction.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/EnemyType.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/enums/EnemyType.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Epsilon.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Epsilon.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/FrameSize.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/FrameSize.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameInfo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameInfo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameLoop.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameLoop.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameObjects.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameObjects.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Intersection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Intersection.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Necropick.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Necropick.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/ShopItem.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/enums/ShopItem.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/ShotGun.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/ShotGun.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Squarantine.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Squarantine.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Trigorath.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Trigorath.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Vertex.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Vertex.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Wave.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Wave.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/omenoct/Omenoct.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Entity/Omenoct.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/omenoct/Side.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/enums/Side.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Sound/SoundPlayer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Sound/SoundPlayer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/CerberusView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/entityViews/CerberusView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/EpsilonView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/entityViews/EpsilonView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/GamePanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/GamePanel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/NecropickView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/entityViews/NecropickView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/OmenoctView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/entityViews/OmenoctView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/Settings/KeyCodeCapture.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/KeyCodeCapture.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/Settings/SettingsFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/SettingsFrame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/ShopFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/ShopFrame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/ShotGunView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/ShotGunView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/SkillTreeFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/SkillTreeFrame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/SquarantineView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/entityViews/SquarantineView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/StarterMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/StarterMenu.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/TrigorathView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/entityViews/TrigorathView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/VertexView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/entityViews/VertexView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/myproject/MyProject.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/myproject/MyProject.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package-info\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"master\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"masterV2.0\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2eomOtKF3m1dtnE0xNY8YwEPx1Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"archmire\",\r\n    \"last_opened_file_path\": \"C:/inetpub/puzzle5\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\" />\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\\images\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\\Sound\" />\r\n    </key>\r\n    <key name=\"MoveMembersDialog.RECENTS_KEY\">\r\n      <recent name=\"Controller.Game\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WindowKill2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"\" />\r\n      <created>1712579277915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712579277915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added a structure to the game\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580191999</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580191999</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added shotgun for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580372590</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580372590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"changing game frame size applied\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580642206</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580642206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"epsilon remains in game frame while shrinking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580834325</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580834325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"resolved conflict in settings branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712729501227</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712729501227</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"resolved a problem in displaying buttons on starter menu\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712730558884</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712730558884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"collision for Squarantine\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712772176634</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712772176634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"epsilon/collectible intersection got more accurate\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713347339136</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713347339136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"fixed bug in unlocking abilities\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713533798835</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713533798835</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"2/3 abilities created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713612581555</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713612581555</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"added vertex for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713673748783</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713673748783</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"impact mechanism for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713702488861</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713702488861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"added waves\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714120152071</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714120152071</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"added sound settings\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714454036121</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714454036121</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"made collisions cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717095490220</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717095490220</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"made paint methods cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717167729736</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717167729736</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"made paint methods cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717167734907</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717167734907</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"added structure to the updated skillTree\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717170418129</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717170418129</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"added structure to shopV2.0\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717488270113</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717488270113</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"created Omenoct\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719144277912</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719144277912</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"21\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"masterV2.0\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"added a structure to the game\" />\r\n    <MESSAGE value=\"added shotgun for epsilon\" />\r\n    <MESSAGE value=\"changing game frame size applied\" />\r\n    <MESSAGE value=\"epsilon remains in game frame while shrinking\" />\r\n    <MESSAGE value=\"added key changing to settings\" />\r\n    <MESSAGE value=\"resolved conflict in settings branch\" />\r\n    <MESSAGE value=\"resolved a problem in displaying buttons on starter menu\" />\r\n    <MESSAGE value=\"collision for Squarantine\" />\r\n    <MESSAGE value=\"epsilon/collectible intersection got more accurate\" />\r\n    <MESSAGE value=\"fixed bug in unlocking abilities\" />\r\n    <MESSAGE value=\"2/3 abilities created\" />\r\n    <MESSAGE value=\"added vertex for epsilon\" />\r\n    <MESSAGE value=\"impact mechanism for epsilon\" />\r\n    <MESSAGE value=\"added waves\" />\r\n    <MESSAGE value=\"added sound settings\" />\r\n    <MESSAGE value=\"made collisions cleaner\" />\r\n    <MESSAGE value=\"made paint methods cleaner\" />\r\n    <MESSAGE value=\"added structure to the updated skillTree\" />\r\n    <MESSAGE value=\"added structure to shopV2.0\" />\r\n    <MESSAGE value=\"created Omenoct\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"created Omenoct\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,57 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="created Omenoct">
-      <change afterPath="$PROJECT_DIR$/src/Model/Entity/Archmire.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Model/Entity/Footprint.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Model/enums/Size.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/View/entityViews/ArchmireView.java" afterDir="false" />
+    <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="Archmire aggression mechanisms created">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/Constants.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/Constants.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Controller/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/Game.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/ImpactSpeed.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/ImpactSpeed.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/KeyListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/KeyListener.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/MouseListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/MouseListener.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/ShopController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/ShopController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/SkillTreeController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/SkillTreeController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Ability.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/enums/Ability.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Archmire.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Cerberus.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Cerberus.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Collectible.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Collectible.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Direction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/enums/Direction.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/EnemyType.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/enums/EnemyType.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Epsilon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Epsilon.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Model/Entity/Archmire.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Archmire.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Model/Entity/Footprint.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Footprint.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Model/Entity/Necropick.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Necropick.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Model/FrameSize.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/FrameSize.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/GameInfo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameInfo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Model/GameLoop.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameLoop.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/GameObjects.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameObjects.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Intersection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Intersection.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Necropick.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Necropick.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/ShopItem.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/enums/ShopItem.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/ShotGun.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/ShotGun.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Squarantine.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Squarantine.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Trigorath.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Trigorath.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Vertex.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Vertex.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Model/Wave.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Wave.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/omenoct/Omenoct.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Entity/Omenoct.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/omenoct/Side.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/enums/Side.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Sound/SoundPlayer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Sound/SoundPlayer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/CerberusView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/CerberusView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/EpsilonView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/EpsilonView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/GamePanel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/NecropickView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/NecropickView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/OmenoctView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/OmenoctView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/Settings/KeyCodeCapture.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/KeyCodeCapture.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/Settings/SettingsFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/SettingsFrame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/ShopFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/ShopFrame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/ShotGunView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/ShotGunView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/SkillTreeFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/SkillTreeFrame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/SquarantineView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/SquarantineView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/StarterMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/StarterMenu.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/TrigorathView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/TrigorathView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/VertexView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/VertexView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/myproject/MyProject.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/myproject/MyProject.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/View/GlassFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/GlassFrame.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/View/entityViews/ArchmireView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/ArchmireView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/View/entityViews/NecropickView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/NecropickView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/View/entityViews/SquarantineView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/SquarantineView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/View/entityViews/TrigorathView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/entityViews/TrigorathView.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -101,14 +64,14 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "archmire",
-    "last_opened_file_path": "C:/inetpub/puzzle5"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;archmire&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/inetpub/puzzle5&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\Namazi\Ap2024\WindowKill2\src" />
@@ -299,7 +262,15 @@
       <option name="project" value="LOCAL" />
       <updated>1719144277912</updated>
     </task>
-    <option name="localTasksCounter" value="21" />
+    <task id="LOCAL-00021" summary="Archmire aggression mechanisms created">
+      <option name="closed" value="true" />
+      <created>1719212879291</created>
+      <option name="number" value="00021" />
+      <option name="presentableId" value="LOCAL-00021" />
+      <option name="project" value="LOCAL" />
+      <updated>1719212879291</updated>
+    </task>
+    <option name="localTasksCounter" value="22" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -346,6 +317,18 @@
     <MESSAGE value="added structure to the updated skillTree" />
     <MESSAGE value="added structure to shopV2.0" />
     <MESSAGE value="created Omenoct" />
-    <option name="LAST_COMMIT_MESSAGE" value="created Omenoct" />
+    <MESSAGE value="Archmire aggression mechanisms created" />
+    <option name="LAST_COMMIT_MESSAGE" value="Archmire aggression mechanisms created" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/View/GlassFrame.java</url>
+          <line>19</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
 </project>
\ No newline at end of file
Index: src/Model/Entity/Archmire.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model.Entity;\r\n\r\nimport Controller.Constants;\r\nimport Model.Collectible;\r\nimport Model.GameObjects;\r\nimport Model.Movable;\r\nimport Model.enums.Size;\r\n\r\nimport java.awt.geom.Point2D;\r\nimport java.util.ArrayList;\r\n\r\npublic class Archmire extends GameObjects implements Movable {\r\n\r\n    private int HP = 30;\r\n    private boolean dead;\r\n    private boolean showCollectibles;\r\n    private boolean visible = true;\r\n    private final ArrayList<Collectible> collectibles = new ArrayList<>();\r\n    private double xVelocity;\r\n    private double yVelocity;\r\n    private Size size;\r\n    private final ArrayList<Footprint> footprints;\r\n\r\n    public Archmire(int x, int y, Size size) {\r\n        super(x, y);\r\n        this.size = size;\r\n        footprints = new ArrayList<>();\r\n        initializeCollectibles();\r\n    }\r\n\r\n    @Override\r\n    public void move() {\r\n\r\n           xVelocity = 0;\r\n        yVelocity = 0;\r\n\r\n        setX((int) (getX() + xVelocity));\r\n        setY((int) (getY() + yVelocity));\r\n        Footprint footprint = new Footprint(new Point2D.Double(getX(), getY()));\r\n           footprints.add(footprint);\r\n\r\n    }\r\n\r\n    public ArrayList<Footprint> getFootprint() {\r\n        return footprints;\r\n    }\r\n\r\n    public void fadeFootprint() {\r\n        for (Footprint footprint : footprints) {\r\n\r\n            footprint.setTimer(footprint.getTimer() + 1);\r\n\r\n            if (footprint.getTimer() >= 500) footprint.setVisible(false);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getWidth() {\r\n        if(size.equals(Size.MINI)) return Constants.miniArchmireWidth();\r\n        else return Constants.largeArchmireWidth();\r\n    }\r\n\r\n    @Override\r\n    public int getHeight() {\r\n        if(size.equals(Size.MINI)) return Constants.miniArchmireHeight();\r\n        else return Constants.largeArchmireHeight();\r\n    }\r\n\r\n    @Override\r\n    public void decreaseHP(int decrement) {\r\n        setHP(getHP() - decrement);\r\n        if (getHP() <= 0) {\r\n            setDead(true);\r\n            setShowCollectibles(true);\r\n        }\r\n\r\n    }\r\n    public void initializeCollectibles(){\r\n        if(size.equals(Size.LARGE)){\r\n            Collectible collectible1 = new Collectible(getX(),getY());\r\n            collectible1.setRadius(10);\r\n\r\n            Collectible collectible2 = new Collectible(getX()+10,getY()+10);\r\n            collectible2.setRadius(10);\r\n\r\n            Collectible collectible3 = new Collectible(getX()+10,getY()-10);\r\n            collectible3.setRadius(10);\r\n\r\n            Collectible collectible4 = new Collectible(getX()-10,getY()+10);\r\n            collectible4.setRadius(10);\r\n\r\n            Collectible collectible5 = new Collectible(getX()-10,getY()-10);\r\n            collectible5.setRadius(10);\r\n\r\n            collectibles.add(collectible1);\r\n            collectibles.add(collectible2);\r\n            collectibles.add(collectible3);\r\n            collectibles.add(collectible4);\r\n            collectibles.add(collectible5);\r\n        }else{\r\n            Collectible collectible1 = new Collectible(getX(),getY());\r\n            collectible1.setRadius(10);\r\n\r\n            Collectible collectible2 = new Collectible(getX()+10,getY()+10);\r\n            collectible2.setRadius(10);\r\n\r\n            Collectible collectible3 = new Collectible(getX()+10,getY()-10);\r\n            collectible3.setRadius(10);\r\n\r\n            collectibles.add(collectible1);\r\n            collectibles.add(collectible2);\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getHP() {\r\n        return HP;\r\n    }\r\n\r\n    public void setHP(int HP) {\r\n        this.HP = HP;\r\n    }\r\n\r\n    public boolean isDead() {\r\n        return dead;\r\n    }\r\n\r\n    public void setDead(boolean dead) {\r\n        this.dead = dead;\r\n    }\r\n\r\n    @Override\r\n    public boolean isShowCollectibles() {\r\n        return showCollectibles;\r\n    }\r\n\r\n    @Override\r\n    public void setShowCollectibles(boolean showCollectibles) {\r\n        this.showCollectibles = showCollectibles;\r\n    }\r\n\r\n    @Override\r\n    public boolean isVisible() {\r\n        return visible;\r\n    }\r\n\r\n    @Override\r\n    public void setVisible(boolean visible) {\r\n        this.visible = visible;\r\n    }\r\n\r\n    @Override\r\n    public ArrayList<Collectible> getCollectibles() {\r\n        return collectibles;\r\n    }\r\n\r\n    @Override\r\n    public double getxVelocity() {\r\n        return xVelocity;\r\n    }\r\n\r\n    @Override\r\n    public void setxVelocity(double xVelocity) {\r\n        this.xVelocity = xVelocity;\r\n    }\r\n\r\n    @Override\r\n    public double getyVelocity() {\r\n        return yVelocity;\r\n    }\r\n\r\n    @Override\r\n    public void setyVelocity(double yVelocity) {\r\n        this.yVelocity = yVelocity;\r\n    }\r\n\r\n\r\n    public Size getsize() {\r\n        return size;\r\n    }\r\n\r\n    public void setSize(Size size) {\r\n        this.size = size;\r\n    }\r\n\r\n    public ArrayList<Footprint> getFootprints() {\r\n        return footprints;\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/Model/Entity/Archmire.java b/src/Model/Entity/Archmire.java
--- a/src/Model/Entity/Archmire.java	
+++ b/src/Model/Entity/Archmire.java	
@@ -6,6 +6,7 @@
 import Model.Movable;
 import Model.enums.Size;
 
+import java.awt.*;
 import java.awt.geom.Point2D;
 import java.util.ArrayList;
 
@@ -20,6 +21,9 @@
     private double yVelocity;
     private Size size;
     private final ArrayList<Footprint> footprints;
+    private static long lastTime;
+    //fading footprint color
+    private static Color footprintColor;
 
     public Archmire(int x, int y, Size size) {
         super(x, y);
@@ -187,4 +191,8 @@
     public ArrayList<Footprint> getFootprints() {
         return footprints;
     }
+
+    public Color getFootprintColor() {
+        return footprintColor;
+    }
 }
Index: src/Model/Entity/Necropick.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model.Entity;\r\n\r\nimport Controller.Constants;\r\nimport Controller.Game;\r\nimport Model.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\n\r\npublic class Necropick extends GameObjects implements Movable {\r\n    private  int HP = 10;\r\n    private boolean dead;\r\n    private boolean showCollectibles;\r\n    private final ArrayList<ShotGun> shots = new ArrayList<>();\r\n    private static int currentTime;\r\n    private boolean canMove;\r\n    private boolean visible = true ;\r\n    private final ArrayList<Collectible> collectibles = new ArrayList<>();\r\n    private int timer;\r\n    private long shotPerTime;\r\n\r\n\r\n    public Necropick(int x, int y) {\r\n        super(x, y);\r\n        initializeCollectibles();\r\n    }\r\n\r\n    @Override\r\n    public void move() {\r\n        if(canMove) {\r\n            Epsilon epsilon = Game.getEpsilon();\r\n            int epsilonX = Game.getEpsilon().getX();\r\n            int epsilonY = Game.getEpsilon().getY();\r\n            int[] x = new int[]{-1, 0, 1, 0};\r\n            int[] y = new int[]{0, -1, 0, 1};\r\n            Random random = new Random();\r\n            int randomDirection = random.nextInt(4);\r\n\r\n            setX(epsilonX + x[randomDirection] *3* epsilon.getRadius());\r\n            setY(epsilonY + y[randomDirection] *3* epsilon.getRadius());\r\n            canMove = false;\r\n            loadGun();\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    public void visible(){\r\n      //  long currentTime = System.currentTimeMillis();\r\n\r\n        currentTime++;\r\n\r\n        if ( visible ) {\r\n            if(currentTime>400) {\r\n\r\n                visible = false;\r\n                //    lastVisibilityChangeTime = currentTime;\r\n           //     currentTime = 0;\r\n            }\r\n\r\n        }\r\n        if (!visible && currentTime >= 600) {\r\n\r\n            visible = true;\r\n            currentTime = 0;\r\n            canMove = true;\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public boolean isVisible() {\r\n        return visible;\r\n    }\r\n\r\n    public void decreaseHP(int decrement){\r\n\r\n        setHP(getHP()-decrement);\r\n        if(getHP()<=0){\r\n\r\n        //    Game.getSoundPlayer().playSoundEffect(\"src/Sound/death.wav\");\r\n            setDead(true);\r\n            setShowCollectibles(true);\r\n\r\n        //    }\r\n\r\n        }else{\r\n          //  Game.getSoundPlayer().playSoundEffect(\"src/Sound/hurt.wav\");\r\n        }\r\n    }\r\n\r\n    public int getHP() {\r\n        return HP;\r\n    }\r\n\r\n    public boolean isDead() {\r\n        return dead;\r\n    }\r\n\r\n    public void setDead(boolean dead) {\r\n        this.dead = dead;\r\n    }\r\n\r\n    public void setHP(int HP) {\r\n        this.HP = HP;\r\n    }\r\n    public boolean isShowCollectibles() {\r\n        return showCollectibles;\r\n    }\r\n\r\n    public void setShowCollectibles(boolean showCollectibles) {\r\n        this.showCollectibles = showCollectibles;\r\n    }\r\n    public void initializeCollectibles(){\r\n\r\n        Collectible collectible1 = new Collectible(getX(),getY());\r\n        collectible1.setRadius(10);\r\n\r\n        Collectible collectible2 = new Collectible(getX()+ Constants.necropickWidth(),getY()+Constants.necropickWidth());\r\n        collectible2.setRadius(10);\r\n\r\n        Collectible collectible3 = new Collectible(getX(),getY()+Constants.necropickWidth());\r\n        collectible3.setRadius(10);\r\n\r\n        Collectible collectible4 = new Collectible(getX()+Constants.necropickWidth(),getY());\r\n        collectible4.setRadius(10);\r\n\r\n        collectibles.add(collectible1);\r\n        collectibles.add(collectible2);\r\n        collectibles.add(collectible3);\r\n        collectibles.add(collectible4);\r\n    }\r\n    public void loadGun(){\r\n\r\n        for(int i=0; i<8; i++){\r\n            ShotGun shotGun = new ShotGun(getX(),getY());\r\n            shotGun.setWidth(Constants.getShotGunWidth());\r\n            shotGun.setHeight(Constants.getShotGunHeight());\r\n            shots.add(shotGun);\r\n        }\r\n    }\r\n    public void shoot(){\r\n\r\n        if(isVisible()){\r\n\r\n            shotPerTime = System.currentTimeMillis();\r\n        long lastTime = 0;\r\n        int[] xDirection = new int[]{-1,-1,0,1,1,1,0,1,1};\r\n        int[] yDirection = new int[]{0,-1,-1,-1,0,1,1,1,0};\r\n        for(int i=0;i<shots.size();i++) {\r\n            shotPerTime++;\r\n            if (shotPerTime - lastTime >= 10 ) {\r\n\r\n                shots.get(i).setxVelocity(xDirection[i % 8] * 2);\r\n                shots.get(i).setyVelocity(yDirection[i % 8] * 2);\r\n                shots.get(i).move();\r\n                lastTime = shotPerTime;\r\n            } else {\r\n                i--;\r\n            }\r\n        }\r\n\r\n        }\r\n    }\r\n    public void invisibleCollectible(){\r\n        if (isShowCollectibles()) {\r\n            setTimer(getTimer() + 1);\r\n            if (getTimer() > 500) {\r\n                setShowCollectibles(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    public int getTimer() {\r\n        return timer;\r\n    }\r\n\r\n    public void setTimer(int timer) {\r\n        this.timer = timer;\r\n    }\r\n\r\n    public ArrayList<Collectible> getCollectibles() {\r\n        return collectibles;\r\n    }\r\n\r\n    public ArrayList<ShotGun> getShots() {\r\n        return shots;\r\n    }\r\n\r\n    @Override\r\n    public boolean isAttackByMelee() {\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public int getWidth() {\r\n        return Constants.necropickWidth();\r\n    }\r\n\r\n    @Override\r\n    public int getHeight() {\r\n        return Constants.necropickWidth();\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/Model/Entity/Necropick.java b/src/Model/Entity/Necropick.java
--- a/src/Model/Entity/Necropick.java	
+++ b/src/Model/Entity/Necropick.java	
@@ -4,6 +4,7 @@
 import Controller.Game;
 import Model.*;
 
+import java.awt.geom.Point2D;
 import java.util.ArrayList;
 import java.util.Random;
 
@@ -13,11 +14,14 @@
     private boolean showCollectibles;
     private final ArrayList<ShotGun> shots = new ArrayList<>();
     private static int currentTime;
+    private static int currentTime2;
     private boolean canMove;
     private boolean visible = true ;
+    private boolean visibleGate = false ;
     private final ArrayList<Collectible> collectibles = new ArrayList<>();
     private int timer;
     private long shotPerTime;
+    private Point2D gatePosition;
 
 
     public Necropick(int x, int y) {
@@ -39,6 +43,7 @@
             setX(epsilonX + x[randomDirection] *3* epsilon.getRadius());
             setY(epsilonY + y[randomDirection] *3* epsilon.getRadius());
             canMove = false;
+
             loadGun();
 
         }
@@ -50,6 +55,7 @@
       //  long currentTime = System.currentTimeMillis();
 
         currentTime++;
+        currentTime2++;
 
         if ( visible ) {
             if(currentTime>400) {
@@ -60,22 +66,26 @@
             }
 
         }
+//        if(!visible && currentTime2>550 && currentTime2<600 && !canMove){
+//            visibleGate = true;
+//            gatePosition = new Point2D.Double(getX(),getY());
+//        }
+
         if (!visible && currentTime >= 600) {
 
             visible = true;
             currentTime = 0;
             canMove = true;
+            visibleGate = false;
+            currentTime2 = 0;
 
         }
-    }
-
-
 
+    }
     @Override
     public boolean isVisible() {
         return visible;
     }
-
     public void decreaseHP(int decrement){
 
         setHP(getHP()-decrement);
@@ -204,4 +214,12 @@
     public int getHeight() {
         return Constants.necropickWidth();
     }
+
+    public boolean isVisibleGate() {
+        return visibleGate;
+    }
+
+    public Point2D getGatePosition() {
+        return gatePosition;
+    }
 }
Index: src/View/entityViews/NecropickView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.entityViews;\r\n\r\nimport Controller.Game;\r\nimport Model.Collectible;\r\nimport Model.Drawable;\r\nimport Model.Entity.Necropick;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class NecropickView implements Drawable {\r\n\r\n    BufferedImage image;\r\n    private final ArrayList<Necropick> necropicks = Game.getNecropicks();\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n\r\n        for (Necropick necropick : necropicks) {\r\n\r\n                if (!necropick.isDead()) {\r\n                    if(necropick.isVisible()) {\r\n                        try {\r\n                            image = ImageIO.read(new File(\"src/images/necropick.png\"));\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        g.drawImage(image, necropick.getX(), necropick.getY(), 50, 50, null);\r\n                    }\r\n                } else {\r\n                    if (necropick.isShowCollectibles()) {\r\n                        g.setColor(Color.orange);\r\n                        for (int j = 0; j < necropick.getCollectibles().size(); j++) {\r\n\r\n\r\n                            Collectible collectible = necropick.getCollectibles().get(j);\r\n                            g.fillOval(collectible.getX(), collectible.getY(), collectible.getRadius(), collectible.getRadius());\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n
===================================================================
diff --git a/src/View/entityViews/NecropickView.java b/src/View/entityViews/NecropickView.java
--- a/src/View/entityViews/NecropickView.java	
+++ b/src/View/entityViews/NecropickView.java	
@@ -32,7 +32,7 @@
                     }
                 } else {
                     if (necropick.isShowCollectibles()) {
-                        g.setColor(Color.orange);
+                        g.setColor(new Color(101, 118, 124, 255));
                         for (int j = 0; j < necropick.getCollectibles().size(); j++) {
 
 
@@ -42,7 +42,17 @@
                         }
                     }
                 }
-            }
-        }
-    }
+                if(!necropick.isDead() && necropick.isVisibleGate() && !necropick.isVisible()){
+                    try {
+                        image = ImageIO.read(new File("src/images/hole.png"));
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
+                  //  g.drawImage((Image) image, (int) necropick.getGatePosition().getX(), (int) necropick.getGatePosition().getY(), 50, 50, null);
+                }
+                }
+            }
+        }
+
+
 
Index: src/View/entityViews/TrigorathView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.entityViews;\r\n\r\nimport Controller.Game;\r\nimport Model.Collectible;\r\nimport Model.Drawable;\r\nimport Model.Entity.Trigorath;\r\n\r\nimport java.awt.*;\r\n\r\npublic class TrigorathView implements Drawable {\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n\r\n        // if trigorath is alive paint it\r\n        // if not show its collectible\r\n\r\n        for (int i = 0; i < Game.getTrigoraths().size(); i++) {\r\n            Trigorath trigorath1 = Game.getTrigoraths().get(i);\r\n            if (!trigorath1.isDead()) {\r\n                g.setColor(Color.YELLOW);\r\n                g.drawPolygon(trigorath1.getxPoints(), trigorath1.getyPoints(), 3);\r\n            } else {\r\n                if (trigorath1.isShowCollectibles()) {\r\n\r\n                    g.setColor(Color.orange);\r\n                    for (int j = 0; j < trigorath1.getCollectibles().size(); j++) {\r\n\r\n\r\n                        Collectible collectible = trigorath1.getCollectibles().get(j);\r\n                        g.fillOval(collectible.getX(), collectible.getY(), collectible.getRadius(), collectible.getRadius());\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/View/entityViews/TrigorathView.java b/src/View/entityViews/TrigorathView.java
--- a/src/View/entityViews/TrigorathView.java	
+++ b/src/View/entityViews/TrigorathView.java	
@@ -22,7 +22,7 @@
             } else {
                 if (trigorath1.isShowCollectibles()) {
 
-                    g.setColor(Color.orange);
+                    g.setColor(new Color(0xE9FF1E));
                     for (int j = 0; j < trigorath1.getCollectibles().size(); j++) {
 
 
Index: src/View/entityViews/SquarantineView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.entityViews;\r\n\r\nimport Controller.Game;\r\nimport Model.Collectible;\r\nimport Model.Drawable;\r\nimport Model.Entity.Squarantine;\r\n\r\nimport java.awt.*;\r\n\r\npublic class SquarantineView implements Drawable {\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n\r\n        // if squarantine is alive paint it\r\n        // if not show its collectible\r\n        for (int i = 0; i < Game.getSquarantine().size(); i++) {\r\n            Squarantine squarantine1 = Game.getSquarantine().get(i);\r\n            if (!squarantine1.isDead()) {\r\n                g.setColor(Color.GREEN);\r\n                g.drawPolygon(squarantine1.getxPoints(), squarantine1.getyPoints(), 4);\r\n            } else {\r\n                if (squarantine1.isShowCollectibles()) {\r\n\r\n                    g.setColor(Color.orange);\r\n                    for (int j = 0; j < squarantine1.getCollectibles().size(); j++) {\r\n\r\n\r\n                        Collectible collectible = squarantine1.getCollectibles().get(j);\r\n                        g.fillOval(collectible.getX(), collectible.getY(), collectible.getRadius(), collectible.getRadius());\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/View/entityViews/SquarantineView.java b/src/View/entityViews/SquarantineView.java
--- a/src/View/entityViews/SquarantineView.java	
+++ b/src/View/entityViews/SquarantineView.java	
@@ -21,7 +21,7 @@
             } else {
                 if (squarantine1.isShowCollectibles()) {
 
-                    g.setColor(Color.orange);
+                    g.setColor(new Color(0x8AFF68));
                     for (int j = 0; j < squarantine1.getCollectibles().size(); j++) {
 
 
Index: src/Model/Entity/Footprint.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model.Entity;\r\n\r\nimport java.awt.geom.Point2D;\r\n\r\npublic class Footprint {\r\n    private Point2D position;\r\n    private int timer;\r\n    private boolean visible = true;\r\n\r\n    public Footprint(Point2D position) {\r\n        this.position = position;\r\n\r\n    }\r\n\r\n    public Point2D getPosition() {\r\n        return position;\r\n    }\r\n\r\n    public void setPosition(Point2D position) {\r\n        this.position = position;\r\n    }\r\n\r\n    public int getTimer() {\r\n        return timer;\r\n    }\r\n\r\n    public void setTimer(int timer) {\r\n        this.timer = timer;\r\n    }\r\n\r\n    public boolean isVisible() {\r\n        return visible;\r\n    }\r\n\r\n    public void setVisible(boolean visible) {\r\n        this.visible = visible;\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/Model/Entity/Footprint.java b/src/Model/Entity/Footprint.java
--- a/src/Model/Entity/Footprint.java	
+++ b/src/Model/Entity/Footprint.java	
@@ -1,15 +1,28 @@
 package Model.Entity;
 
+import java.awt.*;
 import java.awt.geom.Point2D;
 
 public class Footprint {
     private Point2D position;
     private int timer;
     private boolean visible = true;
+    private static Color color = new Color(40, 76, 213,100);
+    private static long lastTime;
 
     public Footprint(Point2D position) {
-        this.position = position;
+        this.position = position;}
 
+    public void fade(){
+        if(isVisible()){
+        long currentTime = System.currentTimeMillis();
+        if((currentTime-lastTime)/1000 >= 1) {
+            if(color.getAlpha()>5) color = new Color(color.getRed(),color.getGreen(),color.getBlue(),color.getAlpha()-5);
+
+            System.out.println(1111);
+            lastTime = currentTime;
+        }
+        }
     }
 
     public Point2D getPosition() {
@@ -35,4 +48,8 @@
     public void setVisible(boolean visible) {
         this.visible = visible;
     }
+
+    public Color getColor() {
+        return color;
+    }
 }
Index: src/View/entityViews/ArchmireView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.entityViews;\r\n\r\nimport Controller.Constants;\r\nimport Controller.Game;\r\nimport Model.Collectible;\r\nimport Model.Drawable;\r\nimport Model.Entity.Archmire;\r\nimport Model.Entity.Footprint;\r\nimport Model.enums.Size;\r\n\r\nimport java.awt.*;\r\nimport java.awt.geom.Point2D;\r\n\r\npublic class ArchmireView implements Drawable {\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n\r\n        for (Archmire archmire : Game.getArchmires()) {\r\n            if(!archmire.isDead()) {\r\n                for (Footprint footprint : archmire.getFootprint()) {\r\n                    if (footprint.getPosition().getX() != archmire.getX() || footprint.getPosition().getY() != archmire.getY()) {\r\n                        if (footprint.isVisible()) {\r\n                            g.setColor(new Color(164, 200, 217));\r\n                            if (archmire.getsize().equals(Size.MINI)) {\r\n                                g.fillOval((int) footprint.getPosition().getX(), (int) footprint.getPosition().getY(), Constants.miniArchmireWidth(), Constants.miniArchmireHeight());\r\n                            }else g.fillOval((int) footprint.getPosition().getX(), (int) footprint.getPosition().getY(), Constants.largeArchmireWidth(), Constants.largeArchmireHeight());\r\n\r\n                        }\r\n                    }\r\n                }\r\n                g.setColor(new Color(4, 55, 93));\r\n                if (archmire.getsize().equals(Size.MINI)) {\r\n                    g.fillOval(archmire.getX(), archmire.getY(), Constants.miniArchmireWidth(), Constants.miniArchmireHeight());\r\n                }else g.fillOval(archmire.getX(), archmire.getY(), Constants.largeArchmireWidth(), Constants.largeArchmireHeight());\r\n\r\n\r\n            }else{\r\n                if(archmire.isShowCollectibles()){\r\n                    for(Collectible collectible : archmire.getCollectibles()){\r\n                        g.setColor(Color.orange);\r\n                        g.fillOval(collectible.getX(), collectible.getY(), collectible.getRadius(), collectible.getRadius());\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/View/entityViews/ArchmireView.java b/src/View/entityViews/ArchmireView.java
--- a/src/View/entityViews/ArchmireView.java	
+++ b/src/View/entityViews/ArchmireView.java	
@@ -18,9 +18,11 @@
         for (Archmire archmire : Game.getArchmires()) {
             if(!archmire.isDead()) {
                 for (Footprint footprint : archmire.getFootprint()) {
+                    g.setColor(footprint.getColor());
                     if (footprint.getPosition().getX() != archmire.getX() || footprint.getPosition().getY() != archmire.getY()) {
                         if (footprint.isVisible()) {
-                            g.setColor(new Color(164, 200, 217));
+                            footprint.fade();
+
                             if (archmire.getsize().equals(Size.MINI)) {
                                 g.fillOval((int) footprint.getPosition().getX(), (int) footprint.getPosition().getY(), Constants.miniArchmireWidth(), Constants.miniArchmireHeight());
                             }else g.fillOval((int) footprint.getPosition().getX(), (int) footprint.getPosition().getY(), Constants.largeArchmireWidth(), Constants.largeArchmireHeight());
@@ -37,7 +39,7 @@
             }else{
                 if(archmire.isShowCollectibles()){
                     for(Collectible collectible : archmire.getCollectibles()){
-                        g.setColor(Color.orange);
+                        g.setColor(new Color(7, 255, 210));
                         g.fillOval(collectible.getX(), collectible.getY(), collectible.getRadius(), collectible.getRadius());
                     }
                 }
