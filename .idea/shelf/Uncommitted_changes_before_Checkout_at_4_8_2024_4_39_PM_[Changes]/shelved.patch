Index: src/Model/Squarantine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model;\r\n\r\nimport Controller.Constants;\r\nimport View.GameFrame;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Squarantine extends GameObjects implements movable {\r\n\r\n    private int xVelocity;\r\n    private int yVelocity;\r\n    private int [] xPoints;\r\n    private int [] yPoints;\r\n    private int HP;\r\n    private int collectible;\r\n    private int HPPerAttack;\r\n    // number of HP it costs from epsilon per each attack\r\n    private final Epsilon epsilon;\r\n    private int epsilonXPos;\r\n    private int epsilonYPos;\r\n    private int squarantineXPos;\r\n    private int squarantineYPos;\r\n    private int angle;\r\n    private int speed;\r\n    public Squarantine(int x, int y) {\r\n        super(x, y);\r\n        epsilon = GameFrame.getEpsilon();\r\n    }\r\n\r\n    public int getxVelocity() {\r\n        return xVelocity;\r\n    }\r\n\r\n    public void setxVelocity(int xVelocity) {\r\n        this.xVelocity = xVelocity;\r\n    }\r\n\r\n    public int getyVelocity() {\r\n        return yVelocity;\r\n    }\r\n\r\n    public void setyVelocity(int yVelocity) {\r\n        this.yVelocity = yVelocity;\r\n    }\r\n\r\n    public int[] getxPoints() {\r\n        return xPoints;\r\n    }\r\n\r\n    public void setxPoints(int[] xPoints) {\r\n        this.xPoints = xPoints;\r\n    }\r\n\r\n    public int[] getyPoints() {\r\n        return yPoints;\r\n    }\r\n\r\n    public void setyPoints(int[] yPoints) {\r\n        this.yPoints = yPoints;\r\n    }\r\n\r\n    public int getHP() {\r\n        return HP;\r\n    }\r\n\r\n    public void setHP(int HP) {\r\n        this.HP = HP;\r\n    }\r\n\r\n    public int getCollectible() {\r\n        return collectible;\r\n    }\r\n\r\n    public void setCollectible(int collectible) {\r\n        this.collectible = collectible;\r\n    }\r\n\r\n    public int getHPPerAttack() {\r\n        return HPPerAttack;\r\n    }\r\n\r\n    public void setHPPerAttack(int HPPerAttack) {\r\n        this.HPPerAttack = HPPerAttack;\r\n    }\r\n\r\n    public int getEpsilonXPos() {\r\n        return epsilonXPos;\r\n    }\r\n\r\n    public void setEpsilonXPos(int epsilonXPos) {\r\n        this.epsilonXPos = epsilonXPos;\r\n    }\r\n\r\n    public int getEpsilonYPos() {\r\n        return epsilonYPos;\r\n    }\r\n\r\n    public void setEpsilonYPos(int epsilonYPos) {\r\n        this.epsilonYPos = epsilonYPos;\r\n    }\r\n\r\n    public int getSquarantineXPos() {\r\n        return squarantineXPos;\r\n    }\r\n\r\n    public void setSquarantineXPos(int squarantineXPos) {\r\n        squarantineXPos = squarantineXPos;\r\n    }\r\n\r\n    public int getSquarantineYPos() {\r\n        return squarantineYPos;\r\n    }\r\n\r\n    public void setSquarantineYPos(int squarantineYPos) {\r\n        squarantineYPos = squarantineYPos;\r\n    }\r\n\r\n    public int getAngle() {\r\n        return angle;\r\n    }\r\n\r\n    public void setAngle(int angle) {\r\n        this.angle = angle;\r\n    }\r\n\r\n    @Override\r\n    public void move() {\r\n\r\n        epsilonXPos = epsilon.getX();\r\n        epsilonYPos = epsilon.getY();\r\n\r\n        squarantineXPos = (xPoints[0]+xPoints[1]+xPoints[2]+xPoints[3])/4;\r\n        squarantineYPos = (yPoints[0]+yPoints[1]+yPoints[2]+yPoints[3])/4;\r\n\r\n        angle = (int) Math.atan2(epsilonYPos-squarantineYPos,epsilonXPos-squarantineXPos);\r\n\r\n\r\n        Random random = new Random();\r\n        boolean aggressionMechanic = random.nextInt(15) == 1;\r\n        // create squarantine random aggression mechanism\r\n\r\n\r\n        if(!aggressionMechanic) {\r\n            speed = Constants.squarantineNormalSpeed();\r\n            this.setxVelocity((int) (speed * Math.cos(angle)));\r\n            this.setyVelocity((int) (speed * Math.sin(angle)));\r\n            speed -= Constants.squarantineAcceleration();\r\n            if(speed<=2){\r\n                speed = 2;\r\n            }\r\n        }else{\r\n            System.out.println(1111);\r\n            this.setxVelocity((int) (speed * Math.cos(angle)));\r\n            this.setyVelocity((int) (speed * Math.sin(angle)));\r\n            speed += Constants.squarantineAcceleration();\r\n            speed += Constants.squarantineAcceleration();\r\n        }\r\n\r\n\r\n\r\n        xPoints[0] += getxVelocity();\r\n        xPoints[1] += getxVelocity();\r\n        xPoints[2] += getxVelocity();\r\n        xPoints[3] += getxVelocity();\r\n\r\n        yPoints[0] += getyVelocity();\r\n        yPoints[1] += getyVelocity();\r\n        yPoints[2] += getyVelocity();\r\n        yPoints[3] += getyVelocity();\r\n\r\n        squarantineXPos += getxVelocity();\r\n        squarantineYPos += getyVelocity();\r\n\r\n\r\n        this.setX(getX() + getxVelocity());\r\n        this.setY(getY() + getyVelocity());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/Squarantine.java b/src/Model/Squarantine.java
--- a/src/Model/Squarantine.java	(revision 11d1cad9fa7ad699382c74d28c3fc3823699344a)
+++ b/src/Model/Squarantine.java	(date 1712581742012)
@@ -22,6 +22,7 @@
     private int squarantineYPos;
     private int angle;
     private int speed;
+    private Random random;
     public Squarantine(int x, int y) {
         super(x, y);
         epsilon = GameFrame.getEpsilon();
@@ -123,8 +124,8 @@
         this.angle = angle;
     }
 
-    @Override
-    public void move() {
+
+    public void moveTowardsEpsilon() {
 
         epsilonXPos = epsilon.getX();
         epsilonYPos = epsilon.getY();
@@ -132,29 +133,10 @@
         squarantineXPos = (xPoints[0]+xPoints[1]+xPoints[2]+xPoints[3])/4;
         squarantineYPos = (yPoints[0]+yPoints[1]+yPoints[2]+yPoints[3])/4;
 
+
         angle = (int) Math.atan2(epsilonYPos-squarantineYPos,epsilonXPos-squarantineXPos);
-
-
-        Random random = new Random();
-        boolean aggressionMechanic = random.nextInt(15) == 1;
-        // create squarantine random aggression mechanism
-
-
-        if(!aggressionMechanic) {
-            speed = Constants.squarantineNormalSpeed();
-            this.setxVelocity((int) (speed * Math.cos(angle)));
-            this.setyVelocity((int) (speed * Math.sin(angle)));
-            speed -= Constants.squarantineAcceleration();
-            if(speed<=2){
-                speed = 2;
-            }
-        }else{
-            System.out.println(1111);
-            this.setxVelocity((int) (speed * Math.cos(angle)));
-            this.setyVelocity((int) (speed * Math.sin(angle)));
-            speed += Constants.squarantineAcceleration();
-            speed += Constants.squarantineAcceleration();
-        }
+        this.setxVelocity((int) (speed * Math.cos(angle)));
+        this.setyVelocity((int) (speed * Math.sin(angle)));
 
 
 
@@ -175,4 +157,21 @@
         this.setX(getX() + getxVelocity());
         this.setY(getY() + getyVelocity());
     }
+    @Override
+    public void move(){
+        random = new Random();
+        if (random.nextInt(100) < 3) { // 3% chance for acceleration event
+            int accelerationFactor = random.nextInt(3) + 1; // Random acceleration between 1 and 3
+            while (speed < 5) {
+                speed += accelerationFactor;
+                moveTowardsEpsilon();
+            }
+        } else {
+            if (speed > Constants.squarantineNormalSpeed()) {
+                speed -= Constants.squarantineAcceleration(); // Decelerate if above normal speed
+            }
+            moveTowardsEpsilon();
+        }
+    }
 }
+
Index: src/Controller/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Controller;\r\n\r\nimport java.awt.*;\r\n\r\npublic class Constants {\r\n\r\n    private static  int FRAME_WIDTH = 700;\r\n    private static  int FRAME_HEIGHT = 700;\r\n    private static  Dimension SCREEN_SIZE = new Dimension(FRAME_WIDTH, FRAME_HEIGHT);\r\n\r\n    public static int getFrameWidth(){\r\n        return 700;\r\n    }\r\n    public static int getFrameHeight(){\r\n        return 700;\r\n    }\r\n    public static Dimension getFrameDimension(){\r\n        return SCREEN_SIZE;\r\n    }\r\n    public static int getEpsilonRadius(){\r\n        return 30;\r\n    }\r\n    public static int getShotGunWidth(){\r\n        return 8;\r\n    }\r\n    public static int getShotGunHeight(){\r\n        return 3;\r\n    }\r\n    public static int getShotGunSpeed(){\r\n        return 8;\r\n    }\r\n    public static int epsilonAbsVelocity(){\r\n        return 5;\r\n    }\r\n    public static int frameWidthForEpsilon(){\r\n        return FRAME_WIDTH - 8;\r\n    }\r\n    public static int frameHeightForEpsilon(){\r\n        return FRAME_HEIGHT - 8;\r\n    }\r\n    public static int HP(){\r\n        return 100;\r\n    }\r\n    public static int XP(){\r\n        return 0;\r\n    }\r\n    public static void setFrameWidth(int frameWidth){\r\n        FRAME_WIDTH = frameWidth;\r\n    }\r\n    public static void setFrameHeight(int frameHeight){\r\n        FRAME_HEIGHT = frameHeight;\r\n    }\r\n    public static void setScreenSize(Dimension dimension){\r\n        SCREEN_SIZE = new Dimension(FRAME_WIDTH,FRAME_HEIGHT);\r\n    }\r\n    public static int shrinkAmount(){\r\n        return 1;\r\n    }\r\n    public static int expandAmount(){\r\n        return 3;\r\n    }\r\n    public static int trigorathLongDistanceSpeed(){\r\n        return 3;\r\n    }\r\n    public static int trigorathNearBySpeed(){\r\n        return 1;\r\n    }\r\n    public static int squarantineNormalSpeed(){\r\n        return 2;\r\n    }\r\n    public static int squarantineAggressionSpeed(){\r\n        return 8;\r\n    }\r\n    public static int squarantineAcceleration(){\r\n        return 4;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/Constants.java b/src/Controller/Constants.java
--- a/src/Controller/Constants.java	(revision 11d1cad9fa7ad699382c74d28c3fc3823699344a)
+++ b/src/Controller/Constants.java	(date 1712581726068)
@@ -72,7 +72,7 @@
         return 8;
     }
     public static int squarantineAcceleration(){
-        return 4;
+        return 1;
     }
 
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"epsilon remains in game frame while shrinking\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/Constants.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/Constants.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/GameLoop.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/GameLoop.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/KeyListener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/KeyListener.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Trigorath.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Trigorath.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/GameFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/GameFrame.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 2\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2eomOtKF3m1dtnE0xNY8YwEPx1Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WindowKill2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"\" />\r\n      <created>1712579277915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712579277915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added a structure to the game\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580191999</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580191999</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added shotgun for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580372590</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580372590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"changing game frame size applied\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580642206</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580642206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"epsilon remains in game frame while shrinking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580834325</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580834325</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"added a structure to the game\" />\r\n    <MESSAGE value=\"added shotgun for epsilon\" />\r\n    <MESSAGE value=\"changing game frame size applied\" />\r\n    <MESSAGE value=\"epsilon remains in game frame while shrinking\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"epsilon remains in game frame while shrinking\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 11d1cad9fa7ad699382c74d28c3fc3823699344a)
+++ b/.idea/workspace.xml	(date 1712581717820)
@@ -4,14 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="epsilon remains in game frame while shrinking">
-      <change beforePath="$PROJECT_DIR$/src/Controller/Constants.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/Constants.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/GameLoop.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/GameLoop.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Controller/KeyListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/KeyListener.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Trigorath.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Trigorath.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/GameFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/GameFrame.java" afterDir="false" />
-    </list>
+    <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="created settings frame" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -26,11 +19,16 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="Squarantine" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 2
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 2
+}</component>
   <component name="ProjectId" id="2eomOtKF3m1dtnE0xNY8YwEPx1Y" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -41,7 +39,7 @@
   "keyToString": {
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master"
+    "git-widget-placeholder": "Settings"
   }
 }]]></component>
   <component name="RunManager">
@@ -94,7 +92,15 @@
       <option name="project" value="LOCAL" />
       <updated>1712580834325</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="created settings frame">
+      <option name="closed" value="true" />
+      <created>1712581706309</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1712581706309</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -113,6 +119,7 @@
     <MESSAGE value="added shotgun for epsilon" />
     <MESSAGE value="changing game frame size applied" />
     <MESSAGE value="epsilon remains in game frame while shrinking" />
-    <option name="LAST_COMMIT_MESSAGE" value="epsilon remains in game frame while shrinking" />
+    <MESSAGE value="created settings frame" />
+    <option name="LAST_COMMIT_MESSAGE" value="created settings frame" />
   </component>
 </project>
\ No newline at end of file
