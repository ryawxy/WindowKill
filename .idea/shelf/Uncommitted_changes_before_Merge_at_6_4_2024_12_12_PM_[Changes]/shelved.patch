Index: src/Controller/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage Controller;\r\n\r\nimport Model.*;\r\nimport Sound.SoundPlayer;\r\nimport View.*;\r\nimport java.awt.*;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\n\r\npublic class Game {\r\n\r\n    private static Epsilon epsilon;\r\n    private static ShotGun shotGun;\r\n    private static ArrayList<Squarantine> squarantines;\r\n    private static ArrayList<Trigorath> trigoraths;\r\n    private static EpsilonView epsilonView;\r\n    private static ShotGunView shotGunView;\r\n    private static TrigorathView trigorathView;\r\n    private static SquarantineView squarantineView;\r\n    private static VertexView vertexView;\r\n    private static CerberusView cerberusView;\r\n    private static GameInfoView gameInfoView;\r\n    protected GamePanel gamePanel;\r\n    protected KeyListener keyListener;\r\n    protected MouseListener mouseListener;\r\n    private static SoundPlayer soundPlayer;\r\n    private static HashMap<Ability,Integer> skillTreeAbilities;\r\n    private static ArrayList<Ability> currentAbilities;\r\n    private  static ArrayList<Cerberus> cerberuses;\r\n\r\n    public Game() throws IOException, AWTException {\r\n\r\n       epsilon = new Epsilon(200, 200);\r\n        epsilon.setRadius(Constants.getEpsilonRadius());\r\n       epsilon.setXP(SkillTreeFrame.getCurrentXP());\r\n\r\n       shotGun = new ShotGun(Game.epsilon.getxCenter(), Game.epsilon.getyCenter());\r\n        shotGun.setWidth(Constants.getShotGunWidth());\r\n        shotGun.setHeight(Constants.getShotGunHeight());\r\n\r\n        cerberuses = new ArrayList<>();\r\n\r\n\r\n        squarantines = new ArrayList<>();\r\n        trigoraths = new ArrayList<>();\r\n\r\n        epsilonView = new EpsilonView();\r\n        shotGunView = new ShotGunView();\r\n        trigorathView = new TrigorathView();\r\n        squarantineView = new SquarantineView();\r\n        vertexView = new VertexView();\r\n        gameInfoView = new GameInfoView();\r\n        cerberusView = new CerberusView();\r\n        currentAbilities = new ArrayList<>();\r\n\r\n        skillTreeAbilities = new HashMap<>();\r\n        skillTreeAbilities.put(Ability.Ares,0);\r\n        skillTreeAbilities.put(Ability.Astrape,0);\r\n        skillTreeAbilities.put(Ability.Cerberus,0);\r\n        skillTreeAbilities.put(Ability.Aceso,0);\r\n        skillTreeAbilities.put(Ability.Melampus,0);\r\n        skillTreeAbilities.put(Ability.Chiron,0);\r\n        skillTreeAbilities.put(Ability.Proteus,0);\r\n        skillTreeAbilities.put(Ability.Dolus,0);\r\n        skillTreeAbilities.put(Ability.Empusa,0);\r\n\r\n\r\n        gamePanel = new GamePanel();\r\n        keyListener = new KeyListener(gamePanel);\r\n        mouseListener = new MouseListener(gamePanel);\r\n        soundPlayer = new SoundPlayer();\r\n        soundPlayer.playBackgroundMusic();\r\n\r\n\r\n    }\r\n\r\n    public static Epsilon getEpsilon() {\r\n        return epsilon;\r\n    }\r\n\r\n    public static ShotGun getShotGun(){\r\n        return shotGun;\r\n    }\r\n\r\n    public static ArrayList<Squarantine> getSquarantine() {\r\n        return squarantines;\r\n    }\r\n\r\n    public static ArrayList<Trigorath> getTrigoraths(){\r\n        return trigoraths;\r\n    }\r\n\r\n    public GamePanel getGameFrame() {\r\n        return gamePanel;\r\n    }\r\n\r\n    public static SoundPlayer getSoundPlayer() {\r\n        return soundPlayer;\r\n    }\r\n\r\n    public static EpsilonView getEpsilonView() {\r\n        return epsilonView;\r\n    }\r\n\r\n    public static ShotGunView getShotGunView() {\r\n        return shotGunView;\r\n    }\r\n\r\n    public static TrigorathView getTrigorathView() {\r\n        return trigorathView;\r\n    }\r\n\r\n    public static SquarantineView getSquarantineView() {\r\n        return squarantineView;\r\n    }\r\n\r\n    public static VertexView getVertexView() {\r\n        return vertexView;\r\n    }\r\n\r\n    public static GameInfoView getGameInfoView() {\r\n        return gameInfoView;\r\n    }\r\n\r\n    public static ArrayList<Cerberus> getCerberuses() {\r\n        return cerberuses;\r\n    }\r\n\r\n    public static CerberusView getCerberusView() {\r\n        return cerberusView;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/Game.java b/src/Controller/Game.java
--- a/src/Controller/Game.java	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/src/Controller/Game.java	(date 1717490469792)
@@ -12,6 +12,7 @@
 
 public class Game {
 
+    private static final ArrayList<ShotGun> shot = new ArrayList<>();
     private static Epsilon epsilon;
     private static ShotGun shotGun;
     private static ArrayList<Squarantine> squarantines;
@@ -23,6 +24,7 @@
     private static VertexView vertexView;
     private static CerberusView cerberusView;
     private static GameInfoView gameInfoView;
+    private static NecropickView necropickView;
     protected GamePanel gamePanel;
     protected KeyListener keyListener;
     protected MouseListener mouseListener;
@@ -54,6 +56,7 @@
         vertexView = new VertexView();
         gameInfoView = new GameInfoView();
         cerberusView = new CerberusView();
+        necropickView = new NecropickView();
         currentAbilities = new ArrayList<>();
 
         skillTreeAbilities = new HashMap<>();
@@ -93,6 +96,17 @@
         return trigoraths;
     }
 
+    public static ArrayList<ShotGun> getShots(){
+        return shot;
+    }
+
+    public static void addShot(int x, int y, int height, int width){
+        ShotGun shotGun = new ShotGun(x,y);
+        shotGun.setWidth(width);
+        shotGun.setHeight(height);
+        shot.add(shotGun);
+    }
+
     public GamePanel getGameFrame() {
         return gamePanel;
     }
@@ -132,4 +146,8 @@
     public static CerberusView getCerberusView() {
         return cerberusView;
     }
+
+    public static NecropickView getNecropickView() {
+        return necropickView;
+    }
 }
Index: src/Model/ShotGun.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ShotGun extends GameObjects implements movable{\r\n\r\n    private int width;\r\n    private int height;\r\n    private int xVelocity;\r\n    private int yVelocity;\r\n    private boolean onFire;\r\n    private static final ArrayList<ShotGun> shot = new ArrayList<>();\r\n    private int expansion;\r\n    // time interval that each shot expands the frame\r\n    private boolean visible = true;\r\n\r\n\r\n    public ShotGun(int x, int y) {\r\n        super(x, y);\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void move() {\r\n        setX(getX()+xVelocity);\r\n        setY(getY()+yVelocity);\r\n    }\r\n\r\n    @Override\r\n    public int getWidth() {\r\n        return width;\r\n    }\r\n\r\n    @Override\r\n    public void setWidth(int width) {\r\n        this.width = width;\r\n    }\r\n\r\n    @Override\r\n    public int getHeight() {\r\n        return height;\r\n    }\r\n\r\n    @Override\r\n    public void setHeight(int height) {\r\n        this.height = height;\r\n    }\r\n\r\n    public int getxVelocity() {\r\n        return xVelocity;\r\n    }\r\n\r\n    public void setxVelocity(int xVelocity) {\r\n        this.xVelocity = xVelocity;\r\n    }\r\n\r\n    public int getyVelocity() {\r\n        return yVelocity;\r\n    }\r\n\r\n    public void setyVelocity(int yVelocity) {\r\n        this.yVelocity = yVelocity;\r\n    }\r\n\r\n    public static ArrayList<ShotGun> getShots(){\r\n        return shot;\r\n    }\r\n    public static void addShot(int x,int y, int height, int width){\r\n        ShotGun shotGun = new ShotGun(x,y);\r\n        shotGun.setWidth(width);\r\n        shotGun.setHeight(height);\r\n        shot.add(shotGun);\r\n    }\r\n\r\n    public boolean isOnFire() {\r\n        return onFire;\r\n    }\r\n\r\n    public void setOnFire(boolean onFire) {\r\n        this.onFire = onFire;\r\n    }\r\n\r\n    public int getExpansion() {\r\n        return expansion;\r\n    }\r\n\r\n    public void setExpansion(int expansion) {\r\n        this.expansion = expansion;\r\n    }\r\n\r\n    @Override\r\n    public boolean isVisible() {\r\n        return visible;\r\n    }\r\n\r\n    @Override\r\n    public void setVisible(boolean visible) {\r\n        this.visible = visible;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/ShotGun.java b/src/Model/ShotGun.java
--- a/src/Model/ShotGun.java	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/src/Model/ShotGun.java	(date 1717490469785)
@@ -1,7 +1,5 @@
 package Model;
 
-import java.util.ArrayList;
-
 public class ShotGun extends GameObjects implements movable{
 
     private int width;
@@ -9,7 +7,6 @@
     private int xVelocity;
     private int yVelocity;
     private boolean onFire;
-    private static final ArrayList<ShotGun> shot = new ArrayList<>();
     private int expansion;
     // time interval that each shot expands the frame
     private boolean visible = true;
@@ -63,16 +60,6 @@
         this.yVelocity = yVelocity;
     }
 
-    public static ArrayList<ShotGun> getShots(){
-        return shot;
-    }
-    public static void addShot(int x,int y, int height, int width){
-        ShotGun shotGun = new ShotGun(x,y);
-        shotGun.setWidth(width);
-        shotGun.setHeight(height);
-        shot.add(shotGun);
-    }
-
     public boolean isOnFire() {
         return onFire;
     }
Index: src/Model/GameLoop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model;\r\n\r\nimport Controller.*;\r\nimport View.*;\r\nimport View.Settings.SettingsFrame;\r\nimport myproject.MyProject;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.geom.Point2D;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class GameLoop {\r\n\r\n    private Game game;\r\n    private  Timer timer;\r\n    private FrameSize frameSize;\r\n    private Intersection intersection;\r\n    private Direction intersectionSide;\r\n    private int countTime;\r\n    // amount of time that has passed since the game has started\r\n    private int index=ShotGun.getShots().size()-3;\r\n    //balls shooting one by on in empower mode\r\n    private int time=3;\r\n    //amount of time since shooting the next fire\r\n    private int empowerTime;\r\n    //amount of time that has passed since empower item is activated\r\n    private int banishTime;\r\n    //amount of time the has passed since banish item is activated\r\n    private Timer elapsedTimer;\r\n    private static int seconds;\r\n    private static int minutes;\r\n    private boolean wave1Created;\r\n    private boolean wave2Created;\r\n    private boolean wave3Created;\r\n    private static boolean VSCollission;\r\n    private static  boolean VTCollision;\r\n    private static boolean gameDone;\r\n    private Wave wave = new Wave();\r\n    int deadS;\r\n    int deadT;\r\n    int timeBetweenWave;\r\n    private static boolean win;\r\n    private static int lastXP;\r\n    private static boolean lose;\r\n    private boolean hasPlayed;\r\n    //game over sound\r\n    private String [] option = {\"menu\"};\r\n    private SkillTreeController skillTreeController = new SkillTreeController();\r\n\r\n    public GameLoop(Game game) throws IOException {\r\n        this.game = game;\r\n    //    start();\r\n   //     elapsedTime();\r\n\r\n    }\r\n    public void elapsedTime(){\r\n        elapsedTimer = new Timer(1000, new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                seconds++;\r\n                if(seconds>=59){\r\n                    seconds = 0;\r\n                    minutes++;\r\n                }\r\n            }\r\n        });\r\n        elapsedTimer.start();\r\n    }\r\n    public void start(){\r\n        timer = new Timer(2, new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n\r\n                if (!KeyListener.getPauseGame()) {\r\n\r\n\r\n                    //waves\r\n                    wave.initWave1();\r\n                    if (!wave1Created) {\r\n                        Game.getSoundPlayer().playSoundEffect(\"src/Sound/wave.wav\");\r\n\r\n                        if(SettingsFrame.getChosenLevel()==0) {\r\n                            for (Squarantine squarantine : wave.wave1EasySquarantine) {\r\n                                Game.getSquarantine().add(squarantine);\r\n\r\n                            }\r\n                            for (Trigorath trigorath : wave.wave1EasyTrigorath) {\r\n                                Game.getTrigoraths().add(trigorath);\r\n                            }\r\n                        }else        if(SettingsFrame.getChosenLevel()==1) {\r\n                            for (Squarantine squarantine : wave.wave1MediumSquarantine) {\r\n                                Game.getSquarantine().add(squarantine);\r\n                            }\r\n                            for (Trigorath trigorath : wave.wave1MediumTrigorath) {\r\n                                Game.getTrigoraths().add(trigorath);\r\n                            }\r\n                        }else  if(SettingsFrame.getChosenLevel()==2) {\r\n                            for (Squarantine squarantine : wave.wave1HardSquarantine) {\r\n                                Game.getSquarantine().add(squarantine);\r\n                            }\r\n                            for (Trigorath trigorath : wave.wave1HardTrigorath) {\r\n                                Game.getTrigoraths().add(trigorath);\r\n                            }\r\n                        }\r\n                        wave1Created = true;\r\n                        GameInfo.setCurrentWave(1);\r\n                    }\r\n\r\n                    try {\r\n                        intersection = new Intersection(game.getGameFrame());\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n\r\n\r\n                    //if wave 1 ended create wave2\r\n                    if (!wave2Created) {\r\n                        for (Trigorath trigorath : Game.getTrigoraths()) {\r\n                            if (trigorath.isDead()) {\r\n                                deadT++;\r\n\r\n                            }\r\n                        }\r\n                        for (Squarantine squarantine : Game.getSquarantine()) {\r\n                            if (squarantine.isDead()) {\r\n                                deadS++;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if (deadT >= Game.getTrigoraths().size() && deadS >= Game.getSquarantine().size()) {\r\n                        timeBetweenWave++;\r\n                        if (timeBetweenWave > 500){\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n                            //    if(nextWave>=200) {\r\n                            wave.initWave2();\r\n                            if (!wave2Created && wave1Created) {\r\n                                Game.getSoundPlayer().playSoundEffect(\"src/Sound/wave.wav\");\r\n\r\n                                if(SettingsFrame.getChosenLevel()==0) {\r\n                                    for (Squarantine squarantine : wave.wave2EasySquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave2EasyTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                    }\r\n                                }else        if(SettingsFrame.getChosenLevel()==1) {\r\n                                    for (Squarantine squarantine : wave.wave2MediumSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave2MediumTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                    }\r\n                                }else  if(SettingsFrame.getChosenLevel()==2) {\r\n                                    for (Squarantine squarantine : wave.wave2HardSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave2HardTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                    }\r\n                                }\r\n                                wave2Created = true;\r\n                                GameInfo.setCurrentWave(2);\r\n                            }\r\n                            timeBetweenWave = 0;\r\n\r\n                        }\r\n                    }\r\n                    deadS = 0;\r\n                    deadT =0 ;\r\n                    if(!wave3Created) {\r\n                        for (Trigorath trigorath : Game.getTrigoraths()) {\r\n                            if (trigorath.isDead()) {\r\n                                deadT++;\r\n\r\n                            }\r\n                        }\r\n                        for (Squarantine squarantine : Game.getSquarantine()) {\r\n                            if (squarantine.isDead()) {\r\n                                deadS++;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if(deadT>= Game.getTrigoraths().size() && deadS>= Game.getSquarantine().size()) {\r\n                        timeBetweenWave++;\r\n                        if (timeBetweenWave > 500) {\r\n\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n\r\n                            wave.initWave3();\r\n                            if (!wave3Created && wave2Created) {\r\n                                Game.getSoundPlayer().playSoundEffect(\"src/Sound/wave.wav\");\r\n\r\n                                if(SettingsFrame.getChosenLevel()==0) {\r\n                                    for (Squarantine squarantine : Wave.wave3EasySquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave3EasyTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                    }\r\n                                }else        if(SettingsFrame.getChosenLevel()==1) {\r\n                                    for (Squarantine squarantine : wave.wave3MediumSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave3MediumTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                    }\r\n                                }else  if(SettingsFrame.getChosenLevel()==2) {\r\n                                    for (Squarantine squarantine : wave.wave3HardSquarantine) {\r\n                                        Game.getSquarantine().add(squarantine);\r\n                                    }\r\n                                    for (Trigorath trigorath : wave.wave3HardTrigorath) {\r\n                                        Game.getTrigoraths().add(trigorath);\r\n                                    }\r\n                                }\r\n                                wave3Created = true;\r\n                                GameInfo.setCurrentWave(3);\r\n                            }\r\n                            timeBetweenWave = 0;\r\n                        }\r\n                    }\r\n\r\n                    deadS = 0;\r\n                    deadT =0 ;\r\n                    if(wave3Created) {\r\n                        for (Trigorath trigorath : Game.getTrigoraths()) {\r\n                            if (trigorath.isDead()) {\r\n                                deadT++;\r\n\r\n                            }\r\n                        }\r\n                        for (Squarantine squarantine : Game.getSquarantine()) {\r\n                            if (squarantine.isDead()) {\r\n                                deadS++;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    if(deadT>= Game.getTrigoraths().size() && deadS>= Game.getSquarantine().size()){\r\n                        win = true;\r\n                        if(Game.getEpsilon().getRadius()<GamePanel.getFRAME_WIDTH() && Game.getEpsilon().getRadius()<=GamePanel.getFRAME_HEIGHT()) {\r\n                            Game.getEpsilon().setRadius(Game.getEpsilon().getRadius() + 1);\r\n\r\n                        }\r\n\r\n                    }\r\n                    if(win && !hasPlayed){\r\n                        Game.getSoundPlayer().playSoundEffect(\"src/Sound/gameover.wav\");\r\n                        hasPlayed = true;\r\n                    }\r\n\r\n                    if((GamePanel.getFRAME_HEIGHT()<=0 || GamePanel.getFRAME_WIDTH()<=0) && win){\r\n\r\n\r\n                        int purchase = JOptionPane.showOptionDialog(GlassFrame.getINSTANCE(),\r\n                                \"You won! XP:\"+ MyProject.getGameInfo().getXP(), null, JOptionPane.DEFAULT_OPTION,\r\n                                JOptionPane.PLAIN_MESSAGE, null, option, option[0]);\r\n\r\n\r\n                        if(purchase == 0){\r\n\r\n                         //   GlassFrame.getINSTANCE().closeFrame();\r\n\r\n                        new StarterMenu();\r\n                            Game.getSoundPlayer().stopBackgroundMusic();\r\n\r\n                            wave1Created =  false;\r\n                            wave2Created = false;\r\n                            wave3Created = false;\r\n                            countTime = 0;\r\n                            seconds = 0;\r\n                            minutes = 0;\r\n                            banishTime = 0;\r\n                            win = false;\r\n                                 ShopFrame.setHealItem(false);\r\n                            ShopFrame.setBanishItem(false);\r\n                            ShopFrame.setEmpowerItem(false);\r\n                            skillTreeController.setCanUseAbility(false);\r\n                            skillTreeController.setCurrentTime(0);\r\n                            skillTreeController.setLastUsed(0);\r\n                            skillTreeController.setAcesoTimer(0);\r\n                            deadS = 0;\r\n                            deadT = 0;\r\n                            intersectionSide = null;\r\n                            KeyListener.setPauseGame(true);\r\n                            GamePanel.setFRAME_WIDTH(700);\r\n                            GamePanel.setFRAME_HEIGHT(700);\r\n                            gameDone = true;\r\n                            lastXP = Game.getEpsilon().getXP();\r\n                            KeyListener.setKeyPressedNumber(0);\r\n                            KeyListener.setAbilityKeyPressed(false);\r\n                            GameInfo.getCurrentAbility().clear();\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n\r\n                            Game.getEpsilon().getVertex().clear();\r\n                            hasPlayed = false;\r\n                            timer.stop();\r\n                            elapsedTimer.stop();\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    if(Game.getEpsilon().getHP()<=0) lose = true;\r\n                    if(lose && !hasPlayed){\r\n                        Game.getSoundPlayer().playSoundEffect(\"src/Sound/gameover.wav\");\r\n                        GamePanel.setFRAME_WIDTH(0);\r\n                        GamePanel.setFRAME_HEIGHT(0);\r\n                        hasPlayed = true;\r\n                    }\r\n                    if( lose ) {\r\n\r\n                        frameSize.shrink();\r\n                        GamePanel.setFRAME_WIDTH(0);\r\n                        GamePanel.setFRAME_HEIGHT(0);\r\n                        int purchase = JOptionPane.showOptionDialog(GlassFrame.getINSTANCE(),\r\n                                \"You lost :( XP:\" + MyProject.getGameInfo().getXP(), null, JOptionPane.DEFAULT_OPTION,\r\n                                JOptionPane.PLAIN_MESSAGE, null, option, option[0]);\r\n\r\n                        if (purchase == 0) {\r\n\r\n                            new StarterMenu();\r\n                            Game.getSoundPlayer().stopBackgroundMusic();\r\n                            wave1Created = false;\r\n                            wave2Created = false;\r\n                            wave3Created = false;\r\n                            countTime = 0;\r\n                            seconds = 0;\r\n                            minutes = 0;\r\n                            banishTime = 0;\r\n                            skillTreeController.setAcesoTimer(0);\r\n                            win = false;\r\n                                 ShopFrame.setHealItem(false);\r\n                            ShopFrame.setBanishItem(false);\r\n                            ShopFrame.setEmpowerItem(false);\r\n                            skillTreeController.setCanUseAbility(false);\r\n                            skillTreeController.setCurrentTime(0);\r\n                            skillTreeController.setLastUsed(0);\r\n                            deadS = 0;\r\n                            deadT = 0;\r\n                            intersectionSide = null;\r\n                            KeyListener.setPauseGame(true);\r\n\r\n                            gameDone = true;\r\n                            lastXP = Game.getEpsilon().getXP();\r\n                            KeyListener.setKeyPressedNumber(0);\r\n                            KeyListener.setAbilityKeyPressed(false);\r\n                            GameInfo.getCurrentAbility().clear();\r\n                            SkillTreeFrame.setCurrentXP(Game.getEpsilon().getXP());\r\n                            Game.getEpsilon().getVertex().clear();\r\n                            Game.getSquarantine().clear();\r\n                            Game.getTrigoraths().clear();\r\n                            hasPlayed = false;\r\n                            lose = false;\r\n                            timer.stop();\r\n                            elapsedTimer.stop();\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    if (!ShopFrame.isEmpowerItem()) {\r\n                        for (ShotGun shotGun : ShotGun.getShots()) {\r\n                            shotGun.move();\r\n                        }\r\n                    } else {\r\n                        empowerTime++;\r\n\r\n                        if (MouseListener.isShootinEmpowerMode()) {\r\n\r\n                            time++;\r\n\r\n                            for (int i = 0; i <= index; i++) {\r\n                                ShotGun.getShots().get(i).move();\r\n                            }\r\n                            if (time >= 2) {\r\n                                if (index <= ShotGun.getShots().size() - 2) {\r\n                                    index++;\r\n                                    time = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for(int i = 0; i< Game.getSquarantine().size(); i++) {\r\n                        Squarantine squarantine = Game.getSquarantine().get(i);\r\n                        squarantine.move();\r\n\r\n                    }\r\n                    for (int i = 0; i < Game.getTrigoraths().size(); i++) {\r\n                        Trigorath trigorath = Game.getTrigoraths().get(i);\r\n                        trigorath.move();\r\n\r\n                    }\r\n                    Game.getEpsilon().move();\r\n\r\n                    for(Vertex vertex : Game.getEpsilon().getVertex()){\r\n                        vertex.move();\r\n                    }\r\n                    for(Cerberus cerberus : Game.getCerberuses()) cerberus.move();\r\n\r\n                    intersection.shotIntersectsSquarantine();\r\n                    intersection.shotIntersectsTrigorath();\r\n                    //    intersection.shotIntersectsSquarantine();\r\n                    intersection.epsilonIntersectsCollectible();\r\n                    //      intersection.epsilonIntersectEnemy();\r\n                    intersection.enemyIntersection();\r\n//                    for(Trigorath trigorath : Game.getTrigoraths()){\r\n//                        Polygon trigorath2 = new Polygon(trigorath.getxPoints(),trigorath.getyPoints(),3);\r\n//                        for(Squarantine squarantine : Game.getSquarantine()){\r\n//                            Polygon squarantine2 = new Polygon(squarantine.getxPoints(),squarantine.getyPoints(),4);\r\n//                            intersection.getIntersectionPoint(trigorath2,squarantine2);\r\n//                        }\r\n//                    }\r\n                    intersection.getIntersectionPoint();\r\n\r\n\r\n\r\n\r\n                    try {\r\n                        frameSize = new FrameSize(game.getGameFrame());\r\n                    } catch (IOException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                    //shrinkage starts after 10 seconds\r\n                    if (countTime >= 700 ) {\r\n\r\n                        frameSize.shrink();\r\n                    }\r\n\r\n\r\n\r\n                    if (empowerTime >= 500) {\r\n                        ShopFrame.setEmpowerItem(false);\r\n                        empowerTime=0;\r\n                    }\r\n\r\n                    //check if a shot intersects with frame edges\r\n                    // if so expansion starts from that side for a second\r\n                    // and impact mechanism activates from that point\r\n\r\n                    for(ShotGun shotGun : ShotGun.getShots()){\r\n                        if(shotGun.isVisible()) intersectionSide = intersection.shotIntersectsFrame(shotGun);\r\n                        if (intersectionSide != null) {\r\n\r\n                            if (shotGun.getExpansion() < 20) {\r\n                                frameSize.expand(intersectionSide);\r\n                                shotGun.setExpansion(shotGun.getExpansion() + 1);\r\n\r\n                                IntersectionPoint point = new IntersectionPoint(new Point2D.Double(shotGun.getX(), shotGun.getY()),10,false,false,null,shotGun);\r\n                                Intersection.getIntersectionPoints().add(point);\r\n                                shotGun.setVisible(false);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    skillTreeController.ableToUseAbility();\r\n                    skillTreeController.activate();\r\n\r\n\r\n                    //if trigorath is dead show its collectibles for 10 seconds\r\n                    for (Trigorath trigorath : Game.getTrigoraths()) {\r\n                        if (trigorath.isShowCollectibles()) {\r\n                            trigorath.setTimer(trigorath.getTimer() + 1);\r\n                            if (trigorath.getTimer() > 300) {\r\n                                trigorath.setShowCollectibles(false);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    countTime++;\r\n\r\n                    for(int i=0; i<Intersection.getIntersectionPoints().size();i++){\r\n                        IntersectionPoint point = Intersection.getIntersectionPoints().get(i);\r\n                        point.setElapsedTime(point.getElapsedTime()+1);\r\n                        if(point.getElapsedTime()>=point.getTime()){\r\n                            Intersection.getIntersectionPoints().remove(point);\r\n                        }\r\n                    }\r\n\r\n                    if(ShopFrame.isBanishItem()){\r\n                        banishTime++;\r\n                    }\r\n                    if(banishTime>=40){\r\n                        banishTime = 0;\r\n                        ShopFrame.setBanishItem(false);\r\n                    }\r\n                    if(ShopFrame.isHealItem()){\r\n                        Game.getEpsilon().setHP(Game.getEpsilon().getHP()+10);\r\n                        ShopFrame.setHealItem(false);\r\n                    }\r\n                    for(Trigorath trigorath: Game.getTrigoraths() ) {\r\n                        if (!trigorath.isDead()) {\r\n                            VTCollision = false;\r\n                            Epsilon epsilon = Game.getEpsilon();\r\n                            Polygon trigorath2 = new Polygon(trigorath.getxPoints(), trigorath.getyPoints(), 3);\r\n                            for (Vertex vertex : epsilon.getVertex()) {\r\n                                if (intersection.checkCollision((int) vertex.getxCenter(), (int) vertex.getyCenter(), vertex.getRadius(), trigorath2)) {\r\n                                    VTCollision = true;\r\n                                    trigorath.decreaseHP(5);\r\n                                    IntersectionPoint point = new IntersectionPoint(new Point2D.Double(trigorath.getX(), trigorath.getY()),10,false,true,vertex,trigorath);\r\n                                    Intersection.getIntersectionPoints().add(point);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for(Trigorath trigorath3: Game.getTrigoraths() ) {\r\n                        if (!trigorath3.isDead()) {\r\n\r\n                            Epsilon epsilon = Game.getEpsilon();\r\n                            Polygon trigorath2 = new Polygon(trigorath3.getxPoints(), trigorath3.getyPoints(), 3);\r\n                            //   if (!VTCollision) {\r\n                            if (intersection.checkCollision(epsilon.getxCenter(), epsilon.getyCenter(), epsilon.getRadius(), trigorath2)) {\r\n                                IntersectionPoint point = new IntersectionPoint(new Point2D.Double(trigorath3.getX(), trigorath3.getY()),30,true,false,trigorath3,epsilon);\r\n                                Intersection.getIntersectionPoints().add(point);\r\n                                boolean melee = point.isMeleeAttack();\r\n                                epsilon.decreaseHP(EnemyType.Trigorath,melee);\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    for(Squarantine squarantine: Game.getSquarantine() ) {\r\n                        if (!squarantine.isDead()) {\r\n                            VSCollission = false;\r\n                            Epsilon epsilon = Game.getEpsilon();\r\n                            Polygon squarantine2 = new Polygon(squarantine.getxPoints(), squarantine.getyPoints(), 4);\r\n                            for (Vertex vertex : epsilon.getVertex()) {\r\n                                if (intersection.checkCollision((int) vertex.getxCenter(), (int) vertex.getyCenter(), vertex.getRadius(), squarantine2)) {\r\n\r\n                                    VSCollission = true;\r\n                                    squarantine.decreaseHP(10);\r\n                                    IntersectionPoint point = new IntersectionPoint(new Point2D.Double(squarantine.getX(), squarantine.getY()),10,false,true,vertex,squarantine);\r\n                                    Intersection.getIntersectionPoints().add(point);\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for(Squarantine squarantine3: Game.getSquarantine() ){\r\n                        if(!squarantine3.isDead()) {\r\n                            VSCollission = false;\r\n                            Epsilon epsilon = Game.getEpsilon();\r\n                            Polygon squarantine2 = new Polygon(squarantine3.getxPoints(), squarantine3.getyPoints(), 4);\r\n                            //       if (!VSCollission) {\r\n                            if (intersection.checkCollision(epsilon.getxCenter(), epsilon.getyCenter(), epsilon.getRadius(), squarantine2)) {\r\n                                IntersectionPoint point = new IntersectionPoint(new Point2D.Double(squarantine3.getX(), squarantine3.getY()),10,true,false,epsilon,squarantine3);\r\n                                Intersection.getIntersectionPoints().add(point);\r\n                                boolean melee = point.isMeleeAttack();\r\n                                epsilon.decreaseHP(EnemyType.Squarantine,melee);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n\r\n                    game.getGameFrame().repaint();\r\n                }\r\n            }\r\n        });\r\n        timer.start();\r\n    }\r\n\r\n    public static int getSeconds() {\r\n        return seconds;\r\n    }\r\n\r\n    public static int getMinutes() {\r\n        return minutes;\r\n    }\r\n\r\n    public static boolean isWin() {\r\n        return win;\r\n    }\r\n\r\n    public static boolean isGameDone() {\r\n        return gameDone;\r\n    }\r\n\r\n    public static boolean isLose() {\r\n        return lose;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/GameLoop.java b/src/Model/GameLoop.java
--- a/src/Model/GameLoop.java	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/src/Model/GameLoop.java	(date 1717490469812)
@@ -22,7 +22,7 @@
     private Direction intersectionSide;
     private int countTime;
     // amount of time that has passed since the game has started
-    private int index=ShotGun.getShots().size()-3;
+    private int index= Game.getShots().size()-3;
     //balls shooting one by on in empower mode
     private int time=3;
     //amount of time since shooting the next fire
@@ -370,7 +370,7 @@
 
 
                     if (!ShopFrame.isEmpowerItem()) {
-                        for (ShotGun shotGun : ShotGun.getShots()) {
+                        for (ShotGun shotGun : Game.getShots()) {
                             shotGun.move();
                         }
                     } else {
@@ -381,10 +381,10 @@
                             time++;
 
                             for (int i = 0; i <= index; i++) {
-                                ShotGun.getShots().get(i).move();
+                                Game.getShots().get(i).move();
                             }
                             if (time >= 2) {
-                                if (index <= ShotGun.getShots().size() - 2) {
+                                if (index <= Game.getShots().size() - 2) {
                                     index++;
                                     time = 0;
                                 }
@@ -449,7 +449,7 @@
                     // if so expansion starts from that side for a second
                     // and impact mechanism activates from that point
 
-                    for(ShotGun shotGun : ShotGun.getShots()){
+                    for(ShotGun shotGun : Game.getShots()){
                         if(shotGun.isVisible()) intersectionSide = intersection.shotIntersectsFrame(shotGun);
                         if (intersectionSide != null) {
 
Index: src/View/GamePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View;\r\n\r\nimport Controller.Constants;\r\nimport Controller.Game;\r\nimport Model.GameInfo;\r\nimport Model.GameLoop;\r\nimport Controller.MouseListener;\r\nimport Model.*;\r\nimport myproject.MyProject;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class GamePanel extends JPanel {\r\n\r\n    static GamePanel INSTANCE;\r\n\r\n    private static int FRAME_WIDTH = 700;\r\n    private static int FRAME_HEIGHT = 700;\r\n    private Dimension SCREEN_SIZE = new Dimension(700, 700);\r\n    private MouseListener mouseListener;\r\n    private static double angle;\r\n\r\n\r\n    public GamePanel() throws IOException {\r\n\r\n\r\n        mouseListener = new MouseListener(this);\r\n        addMouseListener(mouseListener);\r\n\r\n        setBorder(BorderFactory.createLineBorder(Color.black, 5));\r\n        setBackground(Color.BLACK);\r\n        setSize(SCREEN_SIZE);\r\n        setLocationToCenter(GlassFrame.getINSTANCE());\r\n        GlassFrame.getINSTANCE().setContentPane(this);\r\n\r\n        addMouseMotionListener(new MouseAdapter() {\r\n            @Override\r\n            public void mouseMoved(MouseEvent e) {\r\n                super.mouseMoved(e);\r\n                double dx = e.getX() - Game.getEpsilon().getxCenter();\r\n                double dy = e.getY() - Game.getEpsilon().getyCenter();\r\n                angle = Math.atan2(dy, dx);\r\n\r\n            }\r\n        });\r\n\r\n        this.addComponentListener(new ComponentAdapter() {\r\n            @Override\r\n            public void componentResized(ComponentEvent e) {\r\n                if(Game.getEpsilon().getX()+ Game.getEpsilon().getRadius() > FRAME_WIDTH){\r\n                    Game.getEpsilon().setX(FRAME_WIDTH - Game.getEpsilon().getRadius());\r\n                    for(Vertex vertex : Game.getEpsilon().getVertex()){\r\n                        vertex.setX(FRAME_WIDTH- Game.getEpsilon().getRadius());\r\n                    }\r\n                } if(Game.getEpsilon().getY() + Game.getEpsilon().getRadius() > FRAME_HEIGHT){\r\n                    Game.getEpsilon().setY(FRAME_HEIGHT - Game.getEpsilon().getRadius());\r\n                    for(Vertex vertex : Game.getEpsilon().getVertex()){\r\n                        vertex.setX(FRAME_HEIGHT- Game.getEpsilon().getRadius());\r\n                    }\r\n                }\r\n\r\n\r\n                repaint();\r\n            }\r\n        });\r\n\r\n        this.setLayout(null);\r\n\r\n    }\r\n\r\n    public void paintComponent(Graphics g) {\r\n        Graphics2D g2D = (Graphics2D) g;\r\n        super.paintComponent(g2D);\r\n\r\n        //paint epsilon\r\n        Game.getEpsilonView().paint(g2D);\r\n\r\n        //paint epsilon's shotGun\r\n        Game.getShotGunView().paint(g2D);\r\n\r\n        //paint trigorath\r\n        Game.getTrigorathView().paint(g2D);\r\n\r\n        //  paint squarantine\r\n        Game.getSquarantineView().paint(g2D);\r\n        //paint epsilons vertex\r\n        Game.getVertexView().paint(g2D);\r\n\r\n        //paint Game info\r\n        Game.getGameInfoView().paint(g2D);\r\n\r\n        //paint Cerberuses\r\n        Game.getCerberusView().paint(g2D);\r\n    }\r\n\r\n    public static int getFRAME_WIDTH() {\r\n        return FRAME_WIDTH;\r\n    }\r\n\r\n    public static void setFRAME_WIDTH(int FRAME_WIDTH) {\r\n        GamePanel.FRAME_WIDTH = FRAME_WIDTH;\r\n    }\r\n\r\n    public static int getFRAME_HEIGHT() {\r\n        return FRAME_HEIGHT;\r\n    }\r\n\r\n    public static void setFRAME_HEIGHT(int FRAME_HEIGHT) {\r\n        GamePanel.FRAME_HEIGHT = FRAME_HEIGHT;\r\n    }\r\n\r\n    public void setLocationToCenter(GlassFrame glassFrame){\r\n        setLocation(glassFrame.getWidth()/2-getWidth()/2,glassFrame.getHeight()/2-getHeight()/2);\r\n    }\r\n    public static GamePanel getINSTANCE() throws IOException {\r\n        if(INSTANCE == null){\r\n            INSTANCE = new GamePanel();\r\n        }\r\n        return INSTANCE;\r\n    }\r\n\r\n    public static double getAngle() {\r\n        return angle;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/View/GamePanel.java b/src/View/GamePanel.java
--- a/src/View/GamePanel.java	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/src/View/GamePanel.java	(date 1717489111957)
@@ -95,6 +95,8 @@
 
         //paint Cerberuses
         Game.getCerberusView().paint(g2D);
+
+        Game.getNecropickView().paint(g2D);
     }
 
     public static int getFRAME_WIDTH() {
Index: src/Model/Intersection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Model;\r\n\r\nimport Controller.Game;\r\nimport View.GamePanel;\r\nimport myproject.MyProject;\r\n\r\nimport java.awt.*;\r\nimport java.awt.geom.Area;\r\nimport java.awt.geom.Ellipse2D;\r\nimport java.awt.geom.Point2D;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class Intersection {\r\n    GamePanel gamePanel;\r\n\r\n    private Polygon squarantine2;\r\n    private Polygon trigorath2;\r\n    private boolean intersect;\r\n    private static Point2D intersectionPoint;\r\n    private static Point2D intersectionPoint2;\r\n    private static Point2D intersectionPoint3;\r\n    private static Point2D intersectionPoint4;\r\n    private static Point2D intersectionPoint5;\r\n    private static Point2D intersectionPoint6;\r\n    private static Point2D intersectionPoint7;\r\n    private static Point2D intersectionPoint8;\r\n    private static Point2D intersectionPoint9;\r\n    private static  ArrayList<IntersectionPoint> intersectionPoints;\r\n\r\n    public Intersection(GamePanel gamePanel) throws IOException {\r\n        this.gamePanel = gamePanel;\r\n    }\r\n    public Intersection(){}\r\n\r\n    public Direction shotIntersectsFrame(ShotGun shotGun) {\r\n\r\n      //    if(shotGun.isVisible()) {\r\n        if (shotGun.getX() >= GamePanel.getFRAME_WIDTH()) {\r\n            return Direction.RIGHT;\r\n        }\r\n        if (shotGun.getY() >= GamePanel.getFRAME_HEIGHT()) {\r\n         //   if(shotGun.isVisible()) {\r\n            //    shotGun.setVisible(false);\r\n                return Direction.DOWN;\r\n\r\n        }\r\n        if (shotGun.getX() <= 0) {\r\n         //   if(shotGun.isVisible()) {\r\n            //    shotGun.setVisible(false);\r\n                return Direction.LEFT;\r\n           // }\r\n        }\r\n        if (shotGun.getY() <= 0) {\r\n         //   if(shotGun.isVisible()) {\r\n           //     shotGun.setVisible(false);\r\n                return Direction.UP;\r\n        //    }\r\n                }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public void shotIntersectsSquarantine(){\r\n        //check if a shot intersects with squarantine\r\n        // if so decrease its HP\r\n        // if its HP reaches 0 , it dies\r\n        for(int j = 0; j< Game.getSquarantine().size(); j++) {\r\n            Squarantine squarantine = Game.getSquarantine().get(j);\r\n            squarantine2 = new Polygon(squarantine.getxPoints(),squarantine.getyPoints(),3);\r\n            if(!squarantine.isDead()){\r\n            for (int i = 0; i < ShotGun.getShots().size(); i++) {\r\n                ShotGun shot = ShotGun.getShots().get(i);\r\n                if(shot.isVisible()) {\r\n                    if (squarantine2.intersects(shot.getX(), shot.getY(), shot.getWidth(), shot.getHeight())) {\r\n                        IntersectionPoint point = new IntersectionPoint(new Point2D.Double(shot.getX(),shot.getY()),10,false,true,shot,squarantine);\r\n                        intersectionPoints.add(point);\r\n                        shot.setVisible(false);\r\n                        squarantine.decreaseHP(5);\r\n                    }\r\n                }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void shotIntersectsTrigorath(){\r\n        //check if a shot intersects with trigorath\r\n        // if so decrease its HP\r\n        // if its HP reaches 0 , it dies\r\n\r\n        for(int j = 0; j< Game.getTrigoraths().size(); j++) {\r\n            Trigorath trigorath = Game.getTrigoraths().get(j);\r\n            trigorath2 = new Polygon(trigorath.getxPoints(),trigorath.getyPoints(),3);\r\n            if(!trigorath.isDead()){\r\n            for (int i = 0; i < ShotGun.getShots().size(); i++) {\r\n                ShotGun shot = ShotGun.getShots().get(i);\r\n                if(shot.isVisible()) {\r\n                    if (trigorath2.intersects(shot.getX(), shot.getY(), shot.getWidth(), shot.getHeight())) {\r\n                        IntersectionPoint point = new IntersectionPoint( new Point2D.Double(shot.getX(),shot.getY()),10,false,true,shot,trigorath);\r\n                        intersectionPoints.add(point);\r\n\r\n                        shot.setVisible(false);\r\n                        trigorath.decreaseHP(5);\r\n                    }\r\n                }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    public void epsilonIntersectsCollectible(){\r\n        // check if epsilon intersects with collectibles\r\n        // if so add to epsilons XP\r\n\r\n        Epsilon epsilon = Game.getEpsilon();\r\n\r\n        for(Trigorath trigorath : Game.getTrigoraths()){\r\n            if(trigorath.isShowCollectibles()){\r\n\r\n                for(int i=0;i<trigorath.getCollectibles().size();i++){\r\n                    Collectible collectible = trigorath.getCollectibles().get(i);\r\n                    Ellipse2D epsilonShape = new Ellipse2D.Double(epsilon.getX()-epsilon.getRadius(),\r\n                            epsilon.getY()-epsilon.getRadius(),\r\n                            2*epsilon.getRadius(),2*epsilon.getRadius());\r\n                    Ellipse2D collectibleShape = new Ellipse2D.Double(collectible.getX()-collectible.getRadius(),\r\n                            collectible.getY()-collectible.getRadius(),\r\n                            2*collectible.getRadius(),2*collectible.getRadius());\r\n                    Area epsilonArea = new Area(epsilonShape);\r\n                    Area collectibleArea = new Area(collectibleShape);\r\n                    epsilonArea.intersect(collectibleArea);\r\n\r\n                    if(!epsilonArea.isEmpty()){\r\n                        MyProject.getGameInfo().setXP(MyProject.getGameInfo().getXP()+5);\r\n                        trigorath.getCollectibles().remove(collectible);\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        for(Squarantine squarantine : Game.getSquarantine()){\r\n            if(squarantine.isShowCollectibles()){\r\n\r\n                for(int i=0;i<squarantine.getCollectibles().size();i++){\r\n                    Collectible collectible = squarantine.getCollectibles().get(i);\r\n\r\n                    Ellipse2D epsilonShape = new Ellipse2D.Double(epsilon.getX()-epsilon.getRadius(),\r\n                            epsilon.getY()-epsilon.getRadius(),\r\n                            2*epsilon.getRadius(),2*epsilon.getRadius());\r\n                    Ellipse2D collectibleShape = new Ellipse2D.Double(collectible.getX()-collectible.getRadius(),\r\n                            collectible.getY()-collectible.getRadius(),\r\n                            2*collectible.getRadius(),2*collectible.getRadius());\r\n                    Area epsilonArea = new Area(epsilonShape);\r\n                    Area collectibleArea = new Area(collectibleShape);\r\n                    epsilonArea.intersect(collectibleArea);\r\n\r\n                    if(!epsilonArea.isEmpty()){\r\n                        MyProject.getGameInfo().setXP(MyProject.getGameInfo().getXP()+5);\r\n                        squarantine.getCollectibles().remove(collectible);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void enemyIntersection(){\r\n        ArrayList<Point2D> points = new ArrayList<>();\r\n        ArrayList<Point2D> points2 = new ArrayList<>();\r\n        Trigorath t = new Trigorath(10,100);\r\n        for(Trigorath trigorath : Game.getTrigoraths()){\r\n            Polygon trigorath2 = new Polygon(trigorath.getxPoints(), trigorath.getyPoints(), 3);\r\n            if(!trigorath.isDead()){\r\n            for(Trigorath trigorath1 : Game.getTrigoraths()) {\r\n                if(!trigorath1.isDead()) {\r\n                    if (!trigorath.equals(trigorath1)) {\r\n\r\n                        for (int i = 0; i < 3; i++) {\r\n                            points.add(new Point2D.Double(trigorath1.getxPoints()[i], trigorath1.getyPoints()[i]));\r\n                        }\r\n                    }\r\n                }\r\n                t = trigorath1;\r\n            }\r\n            }\r\n            for (Point2D point2D : points) {\r\n                if (trigorath2.contains(point2D)) {\r\n                    IntersectionPoint point = new IntersectionPoint(point2D,10,false,false,trigorath,t);\r\n                    intersectionPoints.add(point);\r\n                    intersectionPoint = point2D;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for(Squarantine squarantine : Game.getSquarantine()){\r\n            for(Squarantine squarantine1 : Game.getSquarantine()){\r\n                if(!squarantine.equals(squarantine1)){\r\n                    Rectangle squarantine2 = new Rectangle(squarantine.getxPoints()[0],squarantine.getyPoints()[0],20,20);\r\n                    Rectangle squarantine3 = new Rectangle(squarantine1.getxPoints()[0],squarantine1.getyPoints()[0],20,20);\r\n                    if(squarantine2.intersects(squarantine3)){\r\n                        Rectangle intersection = squarantine2.intersection(squarantine3);\r\n                        IntersectionPoint point = new IntersectionPoint( new Point2D.Double(intersection.x,intersection.y),10,false,false,squarantine1,squarantine);\r\n                        intersectionPoints.add(point);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    public void  getIntersectionPoint() {\r\n        for(Trigorath trigorath : Game.getTrigoraths()){\r\n            for(Squarantine squarantine : Game.getSquarantine()){\r\n                Polygon trigorath1 = new Polygon(trigorath.getxPoints(), trigorath.getyPoints(), 3);\r\n                Polygon squarantine1 = new Polygon(squarantine.getxPoints(), squarantine.getyPoints(), 4);\r\n\r\n                for (int i = 0; i < trigorath1.npoints; i++) {\r\n                    for (int j = 0; j < squarantine1.npoints; j++) {\r\n                        if (trigorath1.contains(squarantine1.xpoints[j], squarantine1.ypoints[j])) {\r\n                            IntersectionPoint point = new IntersectionPoint(new Point2D.Double(squarantine1.xpoints[j], squarantine1.ypoints[j]),30,false,false,trigorath,squarantine);\r\n                            intersectionPoints.add(point);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\npublic boolean checkCollision(int epsilonX,int epsilonY,int radius,Polygon polygon){\r\n    Ellipse2D epsilon = new Ellipse2D.Double(epsilonX-radius,epsilonY-radius,radius,radius);\r\n    Area epsilonArea = new Area(epsilon);\r\n    Area polygonArea = new Area(polygon);\r\n    epsilonArea.intersect(polygonArea);\r\n    return !epsilonArea.isEmpty();\r\n}\r\n\r\n\r\n    public static Point2D getIntersectionPoint2() {\r\n        return intersectionPoint2;\r\n    }\r\n\r\n\r\n    public static Point2D getIntersectionPoint3() {\r\n        return intersectionPoint3;\r\n    }\r\n\r\n\r\n    public static Point2D getIntersectionPoint4() {\r\n        return intersectionPoint4;\r\n    }\r\n\r\n\r\n\r\n    public static ArrayList<IntersectionPoint> getIntersectionPoints(){\r\n        if(intersectionPoints==null) intersectionPoints = new ArrayList<>();\r\n        return intersectionPoints;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/Intersection.java b/src/Model/Intersection.java
--- a/src/Model/Intersection.java	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/src/Model/Intersection.java	(date 1717490469799)
@@ -70,8 +70,8 @@
             Squarantine squarantine = Game.getSquarantine().get(j);
             squarantine2 = new Polygon(squarantine.getxPoints(),squarantine.getyPoints(),3);
             if(!squarantine.isDead()){
-            for (int i = 0; i < ShotGun.getShots().size(); i++) {
-                ShotGun shot = ShotGun.getShots().get(i);
+            for (int i = 0; i < Game.getShots().size(); i++) {
+                ShotGun shot = Game.getShots().get(i);
                 if(shot.isVisible()) {
                     if (squarantine2.intersects(shot.getX(), shot.getY(), shot.getWidth(), shot.getHeight())) {
                         IntersectionPoint point = new IntersectionPoint(new Point2D.Double(shot.getX(),shot.getY()),10,false,true,shot,squarantine);
@@ -94,8 +94,8 @@
             Trigorath trigorath = Game.getTrigoraths().get(j);
             trigorath2 = new Polygon(trigorath.getxPoints(),trigorath.getyPoints(),3);
             if(!trigorath.isDead()){
-            for (int i = 0; i < ShotGun.getShots().size(); i++) {
-                ShotGun shot = ShotGun.getShots().get(i);
+            for (int i = 0; i < Game.getShots().size(); i++) {
+                ShotGun shot = Game.getShots().get(i);
                 if(shot.isVisible()) {
                     if (trigorath2.intersects(shot.getX(), shot.getY(), shot.getWidth(), shot.getHeight())) {
                         IntersectionPoint point = new IntersectionPoint( new Point2D.Double(shot.getX(),shot.getY()),10,false,true,shot,trigorath);
Index: src/View/NecropickView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/View/NecropickView.java b/src/View/NecropickView.java
new file mode 100644
--- /dev/null	(date 1717489988204)
+++ b/src/View/NecropickView.java	(date 1717489988204)
@@ -0,0 +1,23 @@
+package View;
+
+import Model.Drawable;
+
+import javax.imageio.ImageIO;
+import java.awt.*;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.IOException;
+
+public class NecropickView implements Drawable {
+
+    BufferedImage image;
+    @Override
+    public void paint(Graphics2D g) {
+        try {
+            image = ImageIO.read(new File("src/images/necropick.png"));
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        g.drawImage(image,100,100,50,50,null);
+    }
+}
Index: src/Controller/MouseListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Controller;\r\n\r\nimport Model.Epsilon;\r\nimport Model.ShotGun;\r\nimport View.GamePanel;\r\nimport View.ShopFrame;\r\n\r\nimport javax.swing.event.MouseInputAdapter;\r\nimport java.awt.event.MouseEvent;\r\n\r\npublic class MouseListener extends MouseInputAdapter {\r\n\r\n    GamePanel gamePanel;\r\n    ShotGun shotGun;\r\n    Epsilon epsilon;\r\n    private int mouseX;\r\n    private int mouseY;\r\n    private double angle;\r\n    private double angle2;\r\n    private double angleDegrees;\r\n    private final double speed = Constants.getShotGunSpeed();\r\n    private static int timer;\r\n    //if empower item is activated, wait a bit for each shot to fire\r\n    private static boolean shootinEmpowerMode;\r\n    public MouseListener(GamePanel gamePanel){\r\n        this.gamePanel = gamePanel;\r\n        shotGun = Game.getShotGun();\r\n        epsilon = Game.getEpsilon();\r\n\r\n    }\r\n\r\n    public void mouseClicked(MouseEvent e) {\r\n        mouseX = e.getX();\r\n        mouseY = e.getY();\r\n\r\n        angle2 = Math.atan2(mouseY - Game.getEpsilon().getY(), mouseX - Game.getEpsilon().getX());\r\n        double fireX = Game.getEpsilon().getX() + Game.getEpsilon().getRadius() * Math.cos(angle2);\r\n        double fireY = Game.getEpsilon().getY() + Game.getEpsilon().getRadius() * Math.sin(angle2);\r\n        angle = Math.atan2(mouseY - epsilon.getY(), mouseX - epsilon.getX());\r\n        angleDegrees = Math.toDegrees(angle);\r\n\r\n        if (!ShopFrame.isEmpowerItem()) {\r\n            ShotGun.addShot((int) fireX, (int) fireY, Constants.getShotGunHeight(), Constants.getShotGunWidth());\r\n\r\n            ShotGun.getShots().getLast().setxVelocity((int) (speed * Math.cos(angle)));\r\n            ShotGun.getShots().getLast().setyVelocity((int) (speed * Math.sin(angle)));\r\n            ShotGun.getShots().getLast().setOnFire(true);\r\n\r\n        }else{\r\n\r\n            shootinEmpowerMode = true;\r\n            for(int i=0;i<3;i++){\r\n                ShotGun.addShot((int) fireX, (int) fireY, Constants.getShotGunHeight(), Constants.getShotGunWidth());\r\n            }\r\n\r\n            for(int j=ShotGun.getShots().size()-3;j<=ShotGun.getShots().size()-1;j++){\r\n\r\n\r\n                ShotGun.getShots().get(j).setxVelocity((int) (speed * Math.cos(angle)));\r\n                ShotGun.getShots().get(j).setyVelocity((int) (speed * Math.sin(angle)));\r\n\r\n                ShotGun.getShots().get(j).setOnFire(true);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static int getTimer() {\r\n        return timer;\r\n    }\r\n\r\n    public static void setTimer(int timer) {\r\n        MouseListener.timer = timer;\r\n    }\r\n\r\n    public static boolean isShootinEmpowerMode() {\r\n        return shootinEmpowerMode;\r\n    }\r\n\r\n    public static void setShootinEmpowerMode(boolean shootinEmpowerMode) {\r\n        MouseListener.shootinEmpowerMode = shootinEmpowerMode;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/MouseListener.java b/src/Controller/MouseListener.java
--- a/src/Controller/MouseListener.java	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/src/Controller/MouseListener.java	(date 1717490469805)
@@ -40,26 +40,26 @@
         angleDegrees = Math.toDegrees(angle);
 
         if (!ShopFrame.isEmpowerItem()) {
-            ShotGun.addShot((int) fireX, (int) fireY, Constants.getShotGunHeight(), Constants.getShotGunWidth());
+            Game.addShot((int) fireX, (int) fireY, Constants.getShotGunHeight(), Constants.getShotGunWidth());
 
-            ShotGun.getShots().getLast().setxVelocity((int) (speed * Math.cos(angle)));
-            ShotGun.getShots().getLast().setyVelocity((int) (speed * Math.sin(angle)));
-            ShotGun.getShots().getLast().setOnFire(true);
+            Game.getShots().getLast().setxVelocity((int) (speed * Math.cos(angle)));
+            Game.getShots().getLast().setyVelocity((int) (speed * Math.sin(angle)));
+            Game.getShots().getLast().setOnFire(true);
 
         }else{
 
             shootinEmpowerMode = true;
             for(int i=0;i<3;i++){
-                ShotGun.addShot((int) fireX, (int) fireY, Constants.getShotGunHeight(), Constants.getShotGunWidth());
+                Game.addShot((int) fireX, (int) fireY, Constants.getShotGunHeight(), Constants.getShotGunWidth());
             }
 
-            for(int j=ShotGun.getShots().size()-3;j<=ShotGun.getShots().size()-1;j++){
+            for(int j = Game.getShots().size()-3; j<= Game.getShots().size()-1; j++){
 
 
-                ShotGun.getShots().get(j).setxVelocity((int) (speed * Math.cos(angle)));
-                ShotGun.getShots().get(j).setyVelocity((int) (speed * Math.sin(angle)));
+                Game.getShots().get(j).setxVelocity((int) (speed * Math.cos(angle)));
+                Game.getShots().get(j).setyVelocity((int) (speed * Math.sin(angle)));
 
-                ShotGun.getShots().get(j).setOnFire(true);
+                Game.getShots().get(j).setOnFire(true);
 
             }
         }
Index: src/Model/Necropick.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Model/Necropick.java b/src/Model/Necropick.java
new file mode 100644
--- /dev/null	(date 1717488567118)
+++ b/src/Model/Necropick.java	(date 1717488567118)
@@ -0,0 +1,10 @@
+package Model;
+
+public class Necropick extends GameObjects {
+    private final int HP = 10;
+    private boolean dead;
+    private boolean showCollectibles;
+    public Necropick(int x, int y) {
+        super(x, y);
+    }
+}
Index: src/View/ShotGunView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View;\r\n\r\nimport Model.Drawable;\r\nimport Model.ShotGun;\r\n\r\nimport java.awt.*;\r\n\r\npublic class ShotGunView implements Drawable {\r\n    @Override\r\n    public void paint(Graphics2D g) {\r\n\r\n        for (ShotGun shotGun1 : ShotGun.getShots()) {\r\n            if (shotGun1.isOnFire()) {\r\n                if (shotGun1.isVisible()) {\r\n                    g.setColor(Color.WHITE);\r\n\r\n                    g.fillRect(shotGun1.getX(), shotGun1.getY(),\r\n                            shotGun1.getWidth(), shotGun1.getHeight());\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/View/ShotGunView.java b/src/View/ShotGunView.java
--- a/src/View/ShotGunView.java	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/src/View/ShotGunView.java	(date 1717490469778)
@@ -1,5 +1,6 @@
 package View;
 
+import Controller.Game;
 import Model.Drawable;
 import Model.ShotGun;
 
@@ -9,7 +10,7 @@
     @Override
     public void paint(Graphics2D g) {
 
-        for (ShotGun shotGun1 : ShotGun.getShots()) {
+        for (ShotGun shotGun1 : Game.getShots()) {
             if (shotGun1.isOnFire()) {
                 if (shotGun1.isVisible()) {
                     g.setColor(Color.WHITE);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"added structure to the updated skillTree\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/Controller/SkillTreeController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Model/Cerberus.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/View/CerberusView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Controller/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Controller/Game.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/CurrentAbility.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Ability.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Epsilon.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Epsilon.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameInfo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameInfo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameLoop.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameLoop.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/GameObjects.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/GameObjects.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Intersection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Intersection.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/IntersectionPoint.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/IntersectionPoint.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Squarantine.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Squarantine.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Trigorath.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Trigorath.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Vertex.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Vertex.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Wave.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Wave.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/GamePanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/GamePanel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/SkillTreeFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/SkillTreeFrame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/View/StarterMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/View/StarterMenu.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"package-info\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"master\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"masterV2.0\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2eomOtKF3m1dtnE0xNY8YwEPx1Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;SkillTreeV2.0&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/MinGW/window&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\" />\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\\images\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Namazi\\Ap2024\\WindowKill2\\src\\Sound\" />\r\n    </key>\r\n    <key name=\"MoveMembersDialog.RECENTS_KEY\">\r\n      <recent name=\"Controller.Game\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WindowKill2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"161ac71f-a5a9-4511-bf91-8bc668c1c09d\" name=\"Changes\" comment=\"\" />\r\n      <created>1712579277915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712579277915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added a structure to the game\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580191999</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580191999</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added shotgun for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580372590</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580372590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"changing game frame size applied\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580642206</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580642206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"epsilon remains in game frame while shrinking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580834325</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580834325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"resolved conflict in settings branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712729501227</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712729501227</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"resolved a problem in displaying buttons on starter menu\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712730558884</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712730558884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"collision for Squarantine\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712772176634</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712772176634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"epsilon/collectible intersection got more accurate\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713347339136</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713347339136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"fixed bug in unlocking abilities\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713533798835</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713533798835</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"2/3 abilities created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713612581555</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713612581555</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"added vertex for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713673748783</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713673748783</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"impact mechanism for epsilon\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713702488861</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713702488861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"added waves\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714120152071</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714120152071</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"added sound settings\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714454036121</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714454036121</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"made collisions cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717095490220</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717095490220</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"made paint methods cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717167729736</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717167729736</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"made paint methods cleaner\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717167734907</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717167734907</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"added structure to the updated skillTree\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717170418129</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717170418129</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"19\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"added a structure to the game\" />\r\n    <MESSAGE value=\"added shotgun for epsilon\" />\r\n    <MESSAGE value=\"changing game frame size applied\" />\r\n    <MESSAGE value=\"epsilon remains in game frame while shrinking\" />\r\n    <MESSAGE value=\"added key changing to settings\" />\r\n    <MESSAGE value=\"resolved conflict in settings branch\" />\r\n    <MESSAGE value=\"resolved a problem in displaying buttons on starter menu\" />\r\n    <MESSAGE value=\"collision for Squarantine\" />\r\n    <MESSAGE value=\"epsilon/collectible intersection got more accurate\" />\r\n    <MESSAGE value=\"fixed bug in unlocking abilities\" />\r\n    <MESSAGE value=\"2/3 abilities created\" />\r\n    <MESSAGE value=\"added vertex for epsilon\" />\r\n    <MESSAGE value=\"impact mechanism for epsilon\" />\r\n    <MESSAGE value=\"added waves\" />\r\n    <MESSAGE value=\"added sound settings\" />\r\n    <MESSAGE value=\"made collisions cleaner\" />\r\n    <MESSAGE value=\"made paint methods cleaner\" />\r\n    <MESSAGE value=\"added structure to the updated skillTree\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added structure to the updated skillTree\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9541132cc49454de0b65ab29b0a0ece4d877286e)
+++ b/.idea/workspace.xml	(date 1717490469883)
@@ -4,27 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="added structure to the updated skillTree">
-      <change afterPath="$PROJECT_DIR$/src/Controller/SkillTreeController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Model/Cerberus.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/View/CerberusView.java" afterDir="false" />
+    <list default="true" id="161ac71f-a5a9-4511-bf91-8bc668c1c09d" name="Changes" comment="added structure to shopV2.0">
+      <change afterPath="$PROJECT_DIR$/src/Model/Necropick.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/View/NecropickView.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Controller/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/Game.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/CurrentAbility.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Ability.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Epsilon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Epsilon.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/GameInfo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameInfo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Controller/MouseListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/MouseListener.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Model/GameLoop.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameLoop.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/GameObjects.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/GameObjects.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Model/Intersection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Intersection.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/IntersectionPoint.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/IntersectionPoint.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Squarantine.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Squarantine.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Trigorath.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Trigorath.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Vertex.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Vertex.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Wave.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Wave.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Model/ShotGun.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/ShotGun.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/View/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/GamePanel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/SkillTreeFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/SkillTreeFrame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/View/StarterMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/StarterMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/View/ShotGunView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/View/ShotGunView.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -71,14 +61,14 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;SkillTreeV2.0&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/MinGW/window&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "masterV2.0",
+    "last_opened_file_path": "C:/inetpub/puzzle5"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\Namazi\Ap2024\WindowKill2\src" />
@@ -253,7 +243,15 @@
       <option name="project" value="LOCAL" />
       <updated>1717170418129</updated>
     </task>
-    <option name="localTasksCounter" value="19" />
+    <task id="LOCAL-00019" summary="added structure to shopV2.0">
+      <option name="closed" value="true" />
+      <created>1717488270113</created>
+      <option name="number" value="00019" />
+      <option name="presentableId" value="LOCAL-00019" />
+      <option name="project" value="LOCAL" />
+      <updated>1717488270113</updated>
+    </task>
+    <option name="localTasksCounter" value="20" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -286,6 +284,7 @@
     <MESSAGE value="made collisions cleaner" />
     <MESSAGE value="made paint methods cleaner" />
     <MESSAGE value="added structure to the updated skillTree" />
-    <option name="LAST_COMMIT_MESSAGE" value="added structure to the updated skillTree" />
+    <MESSAGE value="added structure to shopV2.0" />
+    <option name="LAST_COMMIT_MESSAGE" value="added structure to shopV2.0" />
   </component>
 </project>
\ No newline at end of file
